/*
 * Copyright (c) 2009 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
modeltype GMFMAP uses mappings('http://www.eclipse.org/gmf/2006/mappings');
modeltype GMFGEN uses gmfgen('http://www.eclipse.org/gmf/2009/GenModel');
modeltype GMFGRAPH uses gmfgraph('http://www.eclipse.org/gmf/2006/GraphicalDefinition');
modeltype ECORE uses ecore('http://www.eclipse.org/emf/2002/Ecore');

transformation Identity(in mapModel : GMFMAP, inout gmfgenModel : GMFGEN);

main() {}

-- *************************************************************************************
-- Visual ID
-- *************************************************************************************

property topNodeID: Integer = 2000;
property childNodeID: Integer = 3000;
property linkNodeID: Integer = 4000;
property nodeLabelID: Integer = 5000;
property linkLabelID: Integer = 6000;
property compartmentID: Integer = 7000;

helper topNodeID(): Integer {
	topNodeID := this.topNodeID + 1;
	return this.topNodeID;
}
helper childNodeID(): Integer {
	childNodeID := childNodeID + 1;
	return childNodeID;
}
helper nodeLabelID(): Integer {
	nodeLabelID := nodeLabelID + 1;
	return nodeLabelID;
}
helper linkNodeID(): Integer {
	linkNodeID := linkNodeID + 1;
	return linkNodeID;
}
helper compartmentID(): Integer {
	compartmentID := compartmentID + 1;
	return compartmentID;
}
helper linkLabelID(): Integer {
	linkLabelID := linkLabelID + 1;
	return linkLabelID;
}
