if (element instanceof <%=importManager.getImportedName("org.eclipse.gmf.gmfgraph.Layoutable")%>) {
	<%=importManager.getImportedName("org.eclipse.gmf.runtime.common.ui.services.properties.descriptors.CompositePropertySource")%> compositeSource = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.common.ui.services.properties.descriptors.CompositePropertySource")%>(element);
	compositeSource.addPropertySource(super.getPropertySource(element));
	
	class ChildMetaclassItemPropertyDescriptor extends <%=importManager.getImportedName("org.eclipse.emf.edit.provider.ItemPropertyDescriptor")%> {
	
		private <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>[] myValues;
	
		ChildMetaclassItemPropertyDescriptor(<%=importManager.getImportedName("org.eclipse.emf.common.notify.AdapterFactory")%> adapterFactory, String displayName, String description, <%=importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%> feature, boolean isSettable, <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>[] valueInstances) {
			super(adapterFactory, displayName, description, feature, isSettable);
			myValues = valueInstances;
		}
		
		protected <%=importManager.getImportedName("java.util.Collection")%> getComboBoxObjects(Object object) {
			if (object instanceof <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) {
				<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> eObject = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) object;
				Object currentValue = getValue(eObject, feature);
				<%=importManager.getImportedName("java.util.Collection")%> result = new <%=importManager.getImportedName("java.util.ArrayList")%>();
				result.add(currentValue);	
				<%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> valueEClass = currentValue instanceof <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> ? ((<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) currentValue).eClass() : null;
				for (int i = 0; i < myValues.length; i++) {
					if (myValues[i].eClass() == valueEClass) {
						continue;
					}
					result.add(myValues[i]);	
				}
				if (currentValue != null) {
					result.add(null);
				}
				return result;
			}
			return null;
		}
		
		public void setPropertyValue(Object object, Object value) {
			if (value instanceof <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) {
				<%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> eClass =  ((<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) value).eClass();
				value = eClass.getEPackage().getEFactoryInstance().create(eClass);
			}
			super.setPropertyValue(object, value);
		}
	}
	
	class SingleDescriptorPropertySource implements <%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertySource")%> {

		private <%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> myPropertyDescriptor;
		
		private <%=importManager.getImportedName("java.util.List")%> myDescriptors = new <%=importManager.getImportedName("java.util.LinkedList")%>();

		SingleDescriptorPropertySource(<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> propertyDescriptor) {
			myPropertyDescriptor = propertyDescriptor;
			myDescriptors.add(myPropertyDescriptor);
		}
		
		public <%=importManager.getImportedName("java.util.List")%> getPropertyDescriptors(Object object) {
			return myDescriptors;
		}

		public <%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> getPropertyDescriptor(Object object, Object propertyID) {
			return myPropertyDescriptor;
		}

		public Object getEditableValue(Object object) {
			return object;
		}
					
	}<%
String factoryAccessor = importManager.getImportedName("org.eclipse.gmf.gmfgraph.GMFGraphFactory") + ".eINSTANCE";
String providerFactoryAccessor = importManager.getImportedName(genDiagram.getEditorGen().getPlugin().getActivatorQualifiedClassName()) + ".getInstance().getItemProvidersAdapterFactory()";
String packageAccessor = importManager.getImportedName("org.eclipse.gmf.gmfgraph.GMFGraphPackage") + ".eINSTANCE";
%>
	
	<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> layoutPropertyDescriptor = new ChildMetaclassItemPropertyDescriptor(<%=providerFactoryAccessor%>, "Layout Manager", "Layout Manager", <%=packageAccessor%>.getLayoutable_Layout(), true, new <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>[] {<%=factoryAccessor%>.createBorderLayout(), <%=factoryAccessor%>.createCustomLayout(), <%=factoryAccessor%>.createFlowLayout(), <%=factoryAccessor%>.createGridLayout(), <%=factoryAccessor%>.createStackLayout(), <%=factoryAccessor%>.createXYLayout()});
	compositeSource.addPropertySource(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource")%>(element, new SingleDescriptorPropertySource(layoutPropertyDescriptor), "EMF")); //$NON-NLS-1$
	<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> layoutDataPropertyDescriptor = new ChildMetaclassItemPropertyDescriptor(<%=providerFactoryAccessor%>, "Layout Data", "Layout Data", <%=packageAccessor%>.getLayoutable_LayoutData(), true, new <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>[] {<%=factoryAccessor%>.createBorderLayoutData(), <%=factoryAccessor%>.createCustomLayoutData(), <%=factoryAccessor%>.createGridLayoutData(), <%=factoryAccessor%>.createXYLayoutData()});
	compositeSource.addPropertySource(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource")%>(element, new SingleDescriptorPropertySource(layoutDataPropertyDescriptor), "EMF")); //$NON-NLS-1$

	if (element instanceof <%=importManager.getImportedName("org.eclipse.gmf.gmfgraph.Polyline")%>) {
		int counter = 1;
		for (<%=importManager.getImportedName("java.util.Iterator")%> it = ((<%=importManager.getImportedName("org.eclipse.gmf.gmfgraph.Polyline")%>) element).getTemplate().iterator(); it.hasNext(); counter++) {
			<%=importManager.getImportedName("org.eclipse.gmf.gmfgraph.Point")%> nextPoint = (<%=importManager.getImportedName("org.eclipse.gmf.gmfgraph.Point")%>) it.next();
			final String titleX = "Point " + counter + " X";
			<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> nextPointPropertyDescriptorX = new <%=importManager.getImportedName("org.eclipse.emf.edit.provider.ItemPropertyDescriptor")%>(<%=providerFactoryAccessor%>, titleX, titleX, <%=packageAccessor%>.getPoint_X(), true, "Template");
			compositeSource.addPropertySource(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource")%>(nextPoint, new SingleDescriptorPropertySource(nextPointPropertyDescriptorX), "EMF") {
				protected <%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertyDescriptor")%> newPropertyDescriptor(<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> itemPropertyDescriptor) {
					return new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor")%>(object, itemPropertyDescriptor, getCategory()) {
						public Object getId() {
							return titleX;
						}
					};
				}
			});

			final String titleY = "Point " + counter + " Y";
			<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> nextPointPropertyDescriptorY = new <%=importManager.getImportedName("org.eclipse.emf.edit.provider.ItemPropertyDescriptor")%>(<%=providerFactoryAccessor%>, titleY, titleY, <%=packageAccessor%>.getPoint_Y(), true, "Template");
			compositeSource.addPropertySource(new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource")%>(nextPoint, new SingleDescriptorPropertySource(nextPointPropertyDescriptorY), "EMF") {
				protected <%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertyDescriptor")%> newPropertyDescriptor(<%=importManager.getImportedName("org.eclipse.emf.edit.provider.IItemPropertyDescriptor")%> itemPropertyDescriptor) {
					return new <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor")%>(object, itemPropertyDescriptor, getCategory()) {
						public Object getId() {
							return titleY;
						}
					};
				}
			});
		}
	}

	return compositeSource;
}