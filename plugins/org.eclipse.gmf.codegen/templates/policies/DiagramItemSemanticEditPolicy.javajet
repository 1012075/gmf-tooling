<%@ jet package="org.eclipse.gmf.codegen.templates.policies" class="DiagramItemSemanticEditPolicyGenerator"
	imports="java.util.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"
	skeleton="../common.skeleton"%>
<%
GenDiagram genDiagram = (GenDiagram) argument;
%>
package <%=genDiagram.getEditPoliciesPackageName()%>;

<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPoliciesPackageName());%>
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gef.commands.Command;
import org.eclipse.gmf.runtime.emf.commands.core.commands.DuplicateEObjectsCommand;
import org.eclipse.gmf.runtime.emf.commands.core.commands.MSLCreateElementCommand;
import org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest;
import org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genDiagram.getItemSemanticEditPolicyClassName()%> extends <%=importManager.getImportedName(genDiagram.getBaseItemSemanticEditPolicyQualifiedClassName())%> {
<%
Collection childNodes = genDiagram.getTopLevelNodes();
GenClass containerGenClass = genDiagram.getDomainDiagramElement();
%>

<%@ include file="childContainerCreateCommand.jetinc"%>

	/**
	 * @generated
	 */
	protected Command getDuplicateCommand(DuplicateElementsRequest req) {
		return getMSLWrapper(new DuplicateAnythingCommand(req));
	}

	/**
	 * @generated
	 */
	private static class DuplicateAnythingCommand extends DuplicateEObjectsCommand {

		/**
		 * @generated
		 */
		public DuplicateAnythingCommand(DuplicateElementsRequest req) {
			super(req.getLabel(), req.getElementsToBeDuplicated(), req.getAllDuplicatedElementsMap());
		}
	}
}
<%importManager.emitSortedImports();%>
