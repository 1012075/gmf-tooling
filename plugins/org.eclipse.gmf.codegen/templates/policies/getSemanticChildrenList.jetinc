
		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("java.util.List")%> getSemanticChildrenList() {
			<%=modelElementInterfaceName%> modelElement = (<%=modelElementInterfaceName%>) ((View) getHost().getModel()).getElement();
			List result = new <%=importManager.getImportedName("java.util.LinkedList")%>();
<%
if (genNodes.size() > 0) {
%>
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
			int nodeVID;
<%
}
%>
<%
for (Iterator it = genNodes.iterator(); it.hasNext();) {
	GenNode nextNode = (GenNode) it.next();
	TypeModelFacet typeModelFacet = nextNode.getModelFacet();
	GenFeature childMetaFeature = typeModelFacet.getChildMetaFeature();
	if (childMetaFeature.isListType()) {
%>	
			for (<%=importManager.getImportedName("java.util.Iterator")%> it = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>.iterator(); it.hasNext();) {
				nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) it.next();
<%
	} else {
%>
			nextValue = <%=getFeatureValueGetter("modelElement", childMetaFeature, false, importManager)%>;
<%
	}
%>
			nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.INSTANCE.getNodeVisualID((View) getHost().getModel(), nextValue, "");
			if (<%=nextNode.getVisualID()%> == nodeVID) {
				result.add(nextValue);
			}
<%
	if (childMetaFeature.isListType()) {
%>
			}
<%
	}
}
%>			
			return result;
		}
		
		/**
		 * @generated
		 */
		protected boolean shouldDeleteView(View view) {
			return view.getElement() != ((View) getHost().getModel()).getElement() && super.shouldDeleteView(view);
		}
