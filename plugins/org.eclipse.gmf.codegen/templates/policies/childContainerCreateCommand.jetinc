	/**
	 * @generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gef.commands.Command")%> getCreateCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest")%> req) {
<%
GenPackage genPackage = genDiagram.getDomainMetaModel();
for (Iterator nodes = childContainer.getChildNodes().iterator(); nodes.hasNext(); ) {
	GenNode genChildNode = (GenNode) nodes.next();
	TypeModelFacet modelFacet = genChildNode.getModelFacet();
	GenFeature containmentMetaFeature = modelFacet.getContainmentMetaFeature();
	GenFeature childMetaFeature = modelFacet.getChildMetaFeature();
	int upperContainmentBound = containmentMetaFeature.getEcoreFeature().getUpperBound();
	int upperChildBound = childMetaFeature.getEcoreFeature().getUpperBound();
	boolean processChildMetafeature = !childMetaFeature.equals(containmentMetaFeature) && upperChildBound > 0;
%>
		if (<%=importManager.getImportedName(genDiagram.getElementTypesQualifiedClassName())%>.<%=genChildNode.getUniqueIdentifier()%> == req.getElementType()) {
<%
	if (upperContainmentBound > 0 || processChildMetafeature) {
		String containerInterfaceName = importManager.getImportedName(containerNode.getModelFacet().getMetaClass().getQualifiedInterfaceName());
%>		
			<%=containerInterfaceName%> container = (<%=containerInterfaceName%>) req.getContainer();
<%
		if (upperContainmentBound > 0) {
			if (upperContainmentBound == 1) {
%>
			if (<%=getFeatureValueGetter("container", containmentMetaFeature, false, importManager)%> != null) {
<%
			} else {
%>
			if (<%=getFeatureValueGetter("container", containmentMetaFeature, false, importManager)%>.size() >= <%=upperContainmentBound%>) {
<%
			}
%>
				return super.getCreateCommand(req);
			}
<%
		}
		
		if (processChildMetafeature) {
			if (upperChildBound == 1) {
%>
			if (<%=getFeatureValueGetter("container", childMetaFeature, false, importManager)%> != null) {
<%
			} else {
%>
			if (<%=getFeatureValueGetter("container", childMetaFeature, false, importManager)%>.size() >= <%=upperChildBound%>) {
<%
			}
%>
				return super.getCreateCommand(req);
			}
<%
		}
	}
%>
			if (req.getContainmentFeature() == null) {
				req.setContainmentFeature(<%=importManager.getImportedName(genPackage.getQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=modelFacet.getContainmentMetaFeature().getFeatureAccessorName()%>());
			}
			return getMSLWrapper(new Create<%=modelFacet.getMetaClass().getName()%>Command(req));
		}
<%
}
%>
		return super.getCreateCommand(req);
	}
<%
for (Iterator nodes = childContainer.getChildNodes().iterator(); nodes.hasNext(); ) {
	GenNode genChildNode = (GenNode) nodes.next();
	TypeModelFacet modelFacet = genChildNode.getModelFacet();
%>

	/**
	 * @generated
	 */
	private static class Create<%=modelFacet.getMetaClass().getName()%>Command extends <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.commands.core.commands.MSLCreateElementCommand")%> {

		/**
		 * @generated
		 */
		public Create<%=modelFacet.getMetaClass().getName()%>Command(CreateElementRequest req) {
			super(req);
		}

		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> getEClassToEdit() {
			return <%=importManager.getImportedName(genPackage.getQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=containerNode.getModelFacet().getMetaClass().getClassifierAccessorName()%>();
		};

		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> getElementToEdit() {
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> container = ((CreateElementRequest) getRequest()).getContainer();
			if (container instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) {
				container = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) container).getElement();
			}
			return container;
		}
<%
	boolean processChildMetafeature = !modelFacet.getChildMetaFeature().isDerived() && !modelFacet.getChildMetaFeature().equals(modelFacet.getContainmentMetaFeature());
	if (modelFacet.getModelElementInitializer() != null || processChildMetafeature) { 
		String metaClassName = importManager.getImportedName(modelFacet.getMetaClass().getQualifiedInterfaceName());
%>

		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> doDefaultElementCreation() {
			<%=metaClassName%> newElement = (<%=metaClassName%>) super.doDefaultElementCreation();
			if (newElement != null) {
<%
		if (processChildMetafeature) {
			String containerMetaClass = importManager.getImportedName(modelFacet.getChildMetaFeature().getGenClass().getQualifiedInterfaceName());
%>
				 <%=containerMetaClass%> container = (<%=containerMetaClass%>) getElementToEdit();
				 if (container != null) {
<%
			if (modelFacet.getChildMetaFeature().isListType()) {
%>
					<%=importManager.getImportedName("java.util.Collection")%> featureValues = container.<%=modelFacet.getChildMetaFeature().getGetAccessor()%>();
					featureValues.add(newElement);
<%
			} else {
%>
				 	<%=getFeatureValueSetterPrefix("container", modelFacet.getChildMetaFeature(), false, importManager)%>newElement);
<%
			}
%>
				 }
<%
		}
		if (modelFacet.getModelElementInitializer() != null) {
%>		
				<%=importManager.getImportedName(genDiagram.getElementTypesQualifiedClassName())%>.Initializers.<%=genChildNode.getUniqueIdentifier()%>.init(newElement);
<%
		}
%>
			}
			return newElement;
		}
<%
	}
%>
	}
<%}%>