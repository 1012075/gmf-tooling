<%@ jet package="org.eclipse.gmf.codegen.templates.navigator" class="NavigatorItemGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenNavigator genNavigator = (GenNavigator) ((Object[]) argument)[0];
GenDiagram genDiagram = genNavigator.getEditorGen().getDiagram();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genNavigator.getNavigatorItemClassName()%> extends <%=importManager.getImportedName(genNavigator.getAbstractNavigatorItemQualifiedClassName())%> {
	
	/**
	 * @generated
	 */	
	static {
		final Class[] supportedTypes = new Class[] { <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>.class, <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>.class };
		<%=importManager.getImportedName("org.eclipse.core.runtime.Platform")%>.getAdapterManager().registerAdapters(new <%=importManager.getImportedName("org.eclipse.core.runtime.IAdapterFactory")%>() {
		
			public Object getAdapter(Object adaptableObject, Class adapterType) {
				if (adaptableObject instanceof <%=genNavigator.getNavigatorItemClassName()%> && (adapterType == <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>.class || adapterType == <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>.class)) {
					return ((<%=genNavigator.getNavigatorItemClassName()%>) adaptableObject).getView();
				}
				return null;
			}

			public Class[] getAdapterList() {
				return supportedTypes;
			}
		}, <%=genNavigator.getNavigatorItemClassName()%>.class);
	}

	/**
	 * @generated
	 */	
	private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> myView;
	
	/**
	 * @generated
	 */	
	private boolean myLeaf = false;	

	/**
	 * @generated
	 */	
	public <%=genNavigator.getNavigatorItemClassName()%>(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view, Object parent, boolean isLeaf) {
		super(parent);
		myView = view;
		myLeaf = isLeaf;
	}

	/**
	 * @generated
	 */	
	public <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> getView() {
		return myView;
	}

	/**
	 * @generated
	 */	
	public boolean isLeaf() {
		return myLeaf;
	}
	
	/**
	 * @generated
	 */	
	public boolean equals(Object obj) {
		if (obj instanceof <%=genNavigator.getNavigatorItemClassName()%>) {
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> eObject = getView().getElement();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> anotherEObject = ((<%=genNavigator.getNavigatorItemClassName()%>) obj).getView().getElement();
			if (eObject == null) {
				return anotherEObject == null;
			} else if (anotherEObject == null) {
				return false;
			}
			return eObject.eResource().getURIFragment(eObject).equals(anotherEObject.eResource().getURIFragment(anotherEObject));
		}
		return super.equals(obj);
	}
	
}
<%importManager.emitSortedImports();%>
