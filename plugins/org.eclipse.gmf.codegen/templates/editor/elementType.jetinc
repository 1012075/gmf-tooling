<%
{
	String displayName = null;

	// Let element type label be the name of the corresponding creation tool.
	// The better solution would be to introduce dedicated property in the model.
	if (genElement.getDiagram().getPalette() != null && genElement.getDiagram().getPalette().getGroups() != null) {
		for (Iterator groups = genElement.getDiagram().getPalette().getGroups().iterator(); groups.hasNext(); ) {
			ToolGroup group = (ToolGroup) groups.next();
			for (Iterator tools = group.getNodeTools().iterator(); tools.hasNext(); ) {
				NodeEntry toolEntry = (NodeEntry) tools.next();
				if (toolEntry.getGenNode().contains(genElement)) {
					displayName = toolEntry.getTitleKey();
					break;
				}
			}
			if (displayName != null) {
				break;
			}
			for (Iterator tools = group.getLinkTools().iterator(); tools.hasNext(); ) {
				LinkEntry toolEntry = (LinkEntry) tools.next();
				if (toolEntry.getGenLink().contains(genElement)) {
					displayName = toolEntry.getTitleKey();
					break;
				}
			}
		}
	}

	if (genElement.getElementType() instanceof MetamodelType) {
		MetamodelType metamodelType = (MetamodelType) genElement.getElementType();
		GenClass metaClass = metamodelType.getMetaClass();
%>
      <metamodel nsURI="<%=metaClass.getGenPackage().getNSURI()%>">
         <metamodelType
               id="<%=metamodelType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
               eclass="<%=metaClass.getName()%>"
               edithelper="<%=metamodelType.getEditHelperQualifiedClassName()%>">
            <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
         </metamodelType>
      </metamodel>
<%
	} else if (genElement.getElementType() instanceof SpecializationType) {
		SpecializationType specializationType = (SpecializationType) genElement.getElementType();
		MetamodelType metamodelType = specializationType.getMetamodelType();
		GenClass metaClass = null;
		String metamodelTypeId = "org.eclipse.gmf.runtime.emf.type.core.null";
		if (metamodelType != null) {
			metaClass = metamodelType.getMetaClass();
			metamodelTypeId = metamodelType.getUniqueIdentifier();
		}
		if (genElement instanceof GenLink) {
			LinkModelFacet modelFacet = ((GenLink) genElement).getModelFacet();
			if (modelFacet instanceof FeatureLinkModelFacet) {
				GenFeature metaFeature = ((FeatureLinkModelFacet) modelFacet).getMetaFeature();
				metaClass = metaFeature.getGenClass();
			}
		}
		if (metaClass != null) {
%>
      <metamodel nsURI="<%=metaClass.getGenPackage().getNSURI()%>">
<%		}%>
         <specializationType
               id="<%=specializationType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
               kind="org.eclipse.gmf.runtime.emf.type.core.IHintedType"
               edithelperadvice="<%=specializationType.getEditHelperAdviceQualifiedClassName()%>">
            <specializes id="<%=metamodelTypeId%>"/>
            <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
         </specializationType>
<%		if (metaClass != null) {%>
      </metamodel>
<%
		}
	} else if (genElement.getElementType() instanceof NotationType) {
		NotationType notationType = (NotationType) genElement.getElementType();
%>
      <specializationType
            id="<%=notationType.getUniqueIdentifier()%>"
<%		if (displayName != null) {%>
               name="<%=displayName%>"
<%		}%>
            kind="org.eclipse.gmf.runtime.diagram.ui.util.INotationType">
         <specializes id="org.eclipse.gmf.runtime.emf.type.core.null"/>
         <param name="semanticHint" value="<%=genElement.getVisualID()%>"/>
      </specializationType>
<%
	}
}
%>