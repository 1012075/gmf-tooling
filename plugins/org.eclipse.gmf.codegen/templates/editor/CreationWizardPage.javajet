<%@ jet package="org.eclipse.gmf.codegen.templates.editor" class="CreationWizardPageGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final GenEditorGenerator editorGen = genDiagram.getEditorGen();
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
final GenApplication application = editorGen.getApplication();
%>
<%@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.common.util.URI;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.osgi.util.NLS;
import org.eclipse.swt.widgets.Composite;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=importManager.getCompilationUnitName()%> extends
<%if (application == null) {%>
<%=importManager.getImportedName("org.eclipse.ui.dialogs.WizardNewFileCreationPage")%>	
<%} else {%>
<%=importManager.getImportedName(application.getPackageName() + ".WizardNewFileCreationPage")%>	
<%}%>
	{

	/**
	 * @generated
	 */
	private final String fileExtension;

	/**
	 * @generated
	 */
	public <%=importManager.getCompilationUnitName()%>(String pageName, IStructuredSelection selection, String fileExtension) {
		super(pageName, selection);
		this.fileExtension = fileExtension;
	}

	/**
	 * Override to create files with this extension.
	 * 
	 * @generated
	 */
	protected String getExtension() {
		return fileExtension;
	}

	/**
	 * @generated
	 */
	public URI getURI() {
<%if (application == null) {%>
		return URI.createPlatformResourceURI(getFilePath().toString());
<%} else {%>
		return URI.createFileURI(getFilePath().toString());
<%}%>
	}
<%if (application == null) {%>

	/**
	 * @generated
	 */
	protected IPath getFilePath() {
		IPath path = getContainerFullPath();
		if (path == null) {
			path = new Path(""); //$NON-NLS-1$
		}
		String fileName = getFileName();
		if (fileName != null) {
			path = path.append(fileName);
		}
		return path;
	}
<%}%>

	<%@ include file="CreationWizardPage_getUniqueFileName.jetinc" fail="alternative"%>
	<%@ start%>
	/**
	 * @generated
	 */
	private String getUniqueFileName(IPath containerFullPath, String fileName) {
		if (containerFullPath == null) {
			containerFullPath = new Path(""); //$NON-NLS-1$
		}
		if (fileName == null || fileName.trim().length() == 0) {
			fileName = "default"; //$NON-NLS-1$
		}
		IPath filePath = containerFullPath.append(fileName);
		String extension = getExtension();
		if (extension != null && !extension.equals(filePath.getFileExtension())) {
			filePath = filePath.addFileExtension(extension);
		}

		extension = filePath.getFileExtension();
		fileName = filePath.removeFileExtension().lastSegment();
		int i = 1;
		while (<%=importManager.getImportedName(genDiagram.getDiagramEditorUtilQualifiedClassName())%>.exists(filePath)) {
			i++;
			filePath = containerFullPath.append(fileName + i);
			if (extension != null) {
				filePath = filePath.addFileExtension(extension);
			}
		}
		return filePath.lastSegment();
	}
	<%@ end%>	

	/**
	 * @generated
	 */
	public void createControl(Composite parent) {
		super.createControl(parent);
		setFileName(getUniqueFileName(getContainerFullPath(), getFileName()));
		setPageComplete(validatePage());
	}

	/**
	 * @generated
	 */
	protected boolean validatePage() {
		if (!super.validatePage()) {
			return false;
		}
		String extension = getExtension();
		if (extension != null && !getFilePath().toString().endsWith("." + extension)) {
			setErrorMessage(NLS.bind("File name should have ''{0}'' extension.", extension));
			return false;
		}
		return true;
	}
}
<%importManager.emitSortedImports();%>