<%@ jet package="org.eclipse.gmf.codegen.templates.editor" class="PluginXML"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.* java.util.*"%>
<%GenDiagram genDiagram = (GenDiagram) argument;%>
<%GenModel genModel = genDiagram.getEMFGenModel();%>
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin
    name="<%=genDiagram.getPluginName()%>"
    id="<%=genDiagram.getPluginID()%>"
    version="1.0.0"
    class="<%=genDiagram.getPluginQualifiedClassName()%>"
    provider-name = "<%=genDiagram.getProviderName()%>">

  <requires>
    <import plugin="org.eclipse.core.runtime"/>
    <import plugin="org.eclipse.core.resources"/>
    <import plugin="org.eclipse.jface"/>
    <import plugin="org.eclipse.ui.ide"/>
    <import plugin="org.eclipse.ui.views"/>
    <import plugin="org.eclipse.ui.workbench"/>
    <import plugin="org.eclipse.emf.ecore"/>
<%
	// XXX org.eclipse.emf.edit.ui is for ExtendedImageRegistry. 
	// FIXME move image registry to plugin class code
%>
    <import plugin="org.eclipse.emf.edit.ui"/>
    <import plugin="org.eclipse.gef" export="true"/>
    <import plugin="org.eclipse.gmf.runtime.gef" export="true"/>
    <import plugin="org.eclipse.gmf.runtime.emf.commands.core"/>
    <import plugin="org.eclipse.gmf.runtime.diagram.ui"/>
    <import plugin="org.eclipse.gmf.runtime.diagram.ui.resources.editor"/>
    <import plugin="org.eclipse.gmf.runtime.diagram.ui.resources.editor.ide"/>
    <import plugin="org.eclipse.gmf.runtime.notation.providers"/>
<%
Set requiredPluginIDs = new LinkedHashSet();
requiredPluginIDs.add(genModel.getModelPluginID());
requiredPluginIDs.add(genModel.getEditPluginID());

for (Iterator it = genModel.getAllUsedGenPackagesWithClassifiers().iterator(); it.hasNext();) {
	GenModel nextGenModel = ((GenPackage) it.next()).getGenModel();
	if (nextGenModel.hasEditSupport()) {
		requiredPluginIDs.add(nextGenModel.getEditPluginID());
	}
}

String[] requiredPlugins = genDiagram.getRequiredPluginIDs();
if (requiredPlugins == null) {
	requiredPlugins = new String[0];
}
requiredPluginIDs.addAll(Arrays.asList(requiredPlugins));

if(PartSelectorUtil.hasPartSelectors(genDiagram)) {
	requiredPluginIDs.addAll(Arrays.asList(PartSelectorUtil.getRequiredPlugins(genDiagram)));
}

for (Iterator it = requiredPluginIDs.iterator(); it.hasNext();) {%>
    <import plugin="<%=it.next()%>" export="true"/>
<%}%>
  </requires>

  <runtime>
    <library name="plugin.jar">
      <export name="*"/>
    </library>
  </runtime>

   <extension point="org.eclipse.core.runtime.preferences">
      <initializer class="<%=genDiagram.getEditorPackageName()%>.PreferencesInitializer"/>
   </extension>

  <extension point="org.eclipse.team.core.fileTypes">
      <fileTypes
         type="text"
         extension="<%=genDiagram.getDiagramFileExtension()%>">
      </fileTypes>
  </extension>

   <extension point="org.eclipse.emf.ecore.extension_parser">
      <parser
         type="<%=genDiagram.getDiagramFileExtension()%>"
         class="org.eclipse.gmf.runtime.emf.core.resources.MResourceFactory">
      </parser>
   </extension>

   <extension point="org.eclipse.ui.editors">
     <editor
        id="<%=genDiagram.getEditorQualifiedClassName()%>ID"
        name="<%=genModel.getModelName()%> Diagram Editor"
        icon="icons/full/obj16/<%=genModel.getModelName()%>ModelFile.gif"
        extensions="<%=genDiagram.getDiagramFileExtension()%>"
        default="true"
        matchingStrategy="<%=genDiagram.getEditorPackageName()%>.MDiagramEditorMatchingStrategy"
        class="<%=genDiagram.getEditorPackageName()%>.<%=genDiagram.getEditorClassName()%>"
        contributorClass="org.eclipse.gmf.runtime.diagram.ui.internal.parts.MinimalActionBarContributor">
     </editor>
   </extension>

   <extension point="org.eclipse.ui.newWizards">
  	  <wizard
  	     name="<%=genModel.getModelName()%> Diagram"
  	     icon="icons/full/obj16/<%=genModel.getModelName()%>ModelFile.gif"
  	     category="org.eclipse.ui.Examples"
  	     class="<%=genDiagram.getEditorPackageName()%>.CreationWizard"
  	     id="<%=genDiagram.getEditorPackageName()%>.CreationWizardID">
  	  	 <description>
  	  		Creates <%=genModel.getModelName()%> diagram.
  	  	 </description>  
      </wizard>
   </extension>

   <extension point="org.eclipse.ui.popupMenus">
      <objectContribution
            id="<%=genDiagram.getPluginID()%>.ui.objectContribution.IFile1"
            nameFilter="*.<%=genDiagram.getDomainDiagramElement().getGenPackage().getPrefix().toLowerCase()%>"
            objectClass="org.eclipse.core.resources.IFile">
         <action
               label="Initialize <%=genDiagram.getDiagramFileExtension()%> diagram file"
               class="<%=genDiagram.getInitDiagramFileActionQualifiedClassName()%>"
               menubarPath="additions"
               enablesFor="1"
               id="<%=genDiagram.getPluginID()%>.ui.InitDiagramFileAction">
         </action>
      </objectContribution>            
  </extension>

   <extension point="org.eclipse.gmf.runtime.diagram.core.viewProviders">
      <viewProvider class="<%=genDiagram.getViewProviderQualifiedClassName()%>">
         <Priority name="Medium"/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Diagram" semanticHints="<%=genModel.getModelName()%>"/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Node" semanticHints=""/>
         <context viewClass="org.eclipse.gmf.runtime.notation.Edge" semanticHints=""/>
      </viewProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
      <editpartProvider class="<%=genDiagram.getEditPartProviderQualifiedClassName()%>">
         <Priority name="Medium"/>
      </editpartProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.emf.core.MetaModelProviders">
      <MetaModelProvider class="<%=genDiagram.getMetamodelSupportProviderQualifiedClassName()%>">
         <Priority name="Medium"/>
      </MetaModelProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.emf.ui.modelingAssistantProviders">
      <modelingAssistantProvider class="<%=genDiagram.getModelingAssistantProviderQualifiedClassName()%>">
         <Priority name="Medium"/>
      </modelingAssistantProvider>
   </extension>

   <extension point="org.eclipse.gmf.runtime.common.ui.services.iconProviders">
      <IconProvider class="<%=genDiagram.getIconProviderQualifiedClassName()%>">
         <Priority name="Medium"/>
      </IconProvider>
   </extension>

</plugin>
