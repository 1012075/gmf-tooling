<%@ jet package="org.eclipse.gmf.codegen.templates.commands" class="CreateTypeNodeCommandGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.* org.eclipse.emf.codegen.ecore.genmodel.*"
	skeleton="../common.skeleton"%>
<%GenNode node = (GenNode) ((Object[]) argument)[0];
GenDiagram genDiagram = node.getDiagram(); 

final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];

TypeModelFacet modelFacet = (TypeModelFacet) node.getModelFacet();
if (modelFacet == null) {
	throw new IllegalArgumentException("TypeModelFacet required");
}

/*GenClass containerGenClass = modelFacet.getContainmentMetaFeature().getGenClass();*/
%>
<%@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=importManager.getCompilationUnitName()%> extends <%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.commands.CreateElementCommand")%> {

		/**
		 * @generated
		 */
		public <%=importManager.getCompilationUnitName()%>(<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest")%> req) {
			super(req);
		}

<%if (!modelFacet.isPhantomElement()) {
	GenClass containerGenClass = modelFacet.getContainmentMetaFeature().getGenClass();%>
		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> getEClassToEdit() {
			return <%=importManager.getImportedName(containerGenClass.getGenPackage().getQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=containerGenClass.getClassifierAccessorName()%>();
		};
<%}%>

		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> getElementToEdit() {
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> container = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest")%>) getRequest()).getContainer();
			if (container instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) {
				container = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) container).getElement();
			}
			return container;
		}

<%if (!modelFacet.isPhantomElement()) {
	GenClass containerGenClass = modelFacet.getContainmentMetaFeature().getGenClass();
	boolean initChildMetafeature = !modelFacet.getChildMetaFeature().isDerived() && !modelFacet.getChildMetaFeature().equals(modelFacet.getContainmentMetaFeature());
	if (modelFacet.getModelElementInitializer() != null || initChildMetafeature) { 
		String metaClassName = importManager.getImportedName(modelFacet.getMetaClass().getQualifiedInterfaceName());%>

		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> doDefaultElementCreation() {
			<%=metaClassName%> newElement = (<%=metaClassName%>) super.doDefaultElementCreation();
			if (newElement != null) {
<%		if (initChildMetafeature) {
			String containerMetaClass = importManager.getImportedName(modelFacet.getChildMetaFeature().getGenClass().getQualifiedInterfaceName());%>
				 <%=containerMetaClass%> container = (<%=containerMetaClass%>) getElementToEdit();
				 if (container != null) {
<%			if (modelFacet.getChildMetaFeature().isListType()) {%>
					<%=importManager.getImportedName("java.util.Collection")%> featureValues = container.<%=modelFacet.getChildMetaFeature().getGetAccessor()%>();
					featureValues.add(newElement);
<%			} else {%>
				 	<%=getFeatureValueSetterPrefix("container", modelFacet.getChildMetaFeature(), false, importManager)%>newElement);
<%			}%>
				 }
<%		}
		if (modelFacet.getModelElementInitializer() != null) {%>		
				<%=importManager.getImportedName(genDiagram.getElementTypesQualifiedClassName())%>.Initializers.<%=node.getUniqueIdentifier()%>.init(newElement);
<%		}%>
			}
			return newElement;
		}
<%	}
	
	GenFeature containmentMetaFeature = modelFacet.getContainmentMetaFeature();
	GenFeature childMetaFeature = modelFacet.getChildMetaFeature();
	int upperContainmentBound = containmentMetaFeature.getEcoreFeature().getUpperBound();
	int upperChildBound = childMetaFeature.getEcoreFeature().getUpperBound();
	boolean checkChildMetafeature = !childMetaFeature.equals(containmentMetaFeature) && upperChildBound > 0;
	if (upperContainmentBound > 0 || checkChildMetafeature) {
		String containerInterfaceName = importManager.getImportedName(containerGenClass.getQualifiedInterfaceName());%>
	
		/**
		 * @generated
		 */
		public boolean canExecute() {
			<%=containerInterfaceName%> container = (<%=containerInterfaceName%>) getElementToEdit();
<%		if (upperContainmentBound > 0) {
			if (upperContainmentBound == 1) {%>
			if (<%=getFeatureValueGetter("container", containmentMetaFeature, false, importManager)%> != null) {
<%			} else {%>
			if (<%=getFeatureValueGetter("container", containmentMetaFeature, false, importManager)%>.size() >= <%=upperContainmentBound%>) {
<%			}%>
				return false;
			}
<%		}
		
		if (checkChildMetafeature) {
			if (upperChildBound == 1) {%>
			if (<%=getFeatureValueGetter("container", childMetaFeature, false, importManager)%> != null) {
<%			} else {%>
			if (<%=getFeatureValueGetter("container", childMetaFeature, false, importManager)%>.size() >= <%=upperChildBound%>) {
<%			}%>
				return false;
			}
<%		} %>
			return true;
		}
<%	}
} else {%>

		/**
		 * @generated
		 */
		public boolean canExecute() {
			if (getEClass() != null) {
				return getEClass().isSuperTypeOf(getEClassToEdit());
			}
			return true;
		}
		
		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EReference")%> getContainmentFeature() {
			return null;
		}
		
		/**
		 * @generated
		 */
		protected <%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> doDefaultElementCreation() {
			// Uncomment to put "phantom" objects into the diagram file.		
			//<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource")%> resource = ((<%=importManager.getImportedName("org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest")%>) getRequest()).getContainer().eResource();
			//if (resource == null) {
			//	return null;
			//}
			<%=importManager.getImportedName("org.eclipse.emf.ecore.resource.Resource")%> resource = getElementToEdit().eResource();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> eClass = getElementType().getEClass();
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> eObject = eClass.getEPackage().getEFactoryInstance().create(eClass);
			resource.getContents().add(eObject);
			return eObject;
		}
<%}%>

}
<%importManager.emitSortedImports();%>
