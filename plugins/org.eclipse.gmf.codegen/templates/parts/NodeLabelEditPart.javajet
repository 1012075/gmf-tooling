<%@ jet package="org.eclipse.gmf.codegen.templates.parts" class="NodeLabelEditPartGenerator"
	imports="org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
<%
GenNodeLabel label = (GenNodeLabel) argument;
GenDiagram genDiagram = label.getDiagram();
%>
package <%=genDiagram.getEditPartsPackageName()%>;

<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
import org.eclipse.gmf.runtime.common.ui.services.parser.IParser;
import org.eclipse.gmf.runtime.diagram.ui.editparts.TextCompartmentEditPart;
import org.eclipse.gmf.runtime.notation.View;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=label.getEditPartClassName()%> extends TextCompartmentEditPart {

	/**
	 * @generated
	 */
	public <%=label.getEditPartClassName()%>(View view) {
		super(view);
		setNumIcons(1);
	}

	/**
	 * @generated
	 */
	protected Image getLabelIcon(int index) {
		ImageDescriptor descriptor = <%=importManager.getImportedName(genDiagram.getPluginQualifiedClassName())%>.getInstance().getItemImageDescriptor(resolveSemanticElement());
		if (descriptor == null) {
			descriptor = ImageDescriptor.getMissingImageDescriptor();
		}
		return descriptor.createImage();
	}
<%
GenPackage genPackage = genDiagram.getDomainMetaModel();
String semanticPackageInterfaceName = importManager.getImportedName(genPackage.getQualifiedPackageInterfaceName());
String accessorName = label.getNode().getDomainMetaClass().getClassifierAccessorName();
%>

	/**
	 * @generated
	 */
	public IParser getParser() {
		if (parser == null) {
			parser = new <%=importManager.getImportedName(genDiagram.getStructuralFeatureParserQualifiedClassName())%>(<%=semanticPackageInterfaceName%>.eINSTANCE.get<%=accessorName%>().getEStructuralFeature("<%=label.getMetaFeature().getName()%>"));
		}
		return parser;
	}
}
<%importManager.emitSortedImports();%>
