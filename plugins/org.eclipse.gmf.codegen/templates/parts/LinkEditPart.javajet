<%@ jet package="org.eclipse.gmf.codegen.templates.parts" class="LinkEditPartGenerator"
	imports="java.util.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
<%
GenLink genLink = (GenLink) argument;
GenDiagram genDiagram = genLink.getDiagram();
%>
package <%=genDiagram.getEditPartsPackageName()%>;

<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
import org.eclipse.draw2d.Connection;
import org.eclipse.draw2d.Graphics;
import org.eclipse.draw2d.PolylineConnection;
import org.eclipse.draw2d.RotatableDecoration;
import org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart;
import org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genLink.getEditPartClassName()%> extends ConnectionNodeEditPart {

	/**
	 * @generated
	 */
	public <%=genLink.getEditPartClassName()%>(View view) {
		super(view);
	}

	/**
	 * @generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
<%if (genLink.getModelFacet() instanceof FeatureModelFacet) {%>
		installEditPolicy(<%=importManager.getImportedName("org.eclipse.gef.EditPolicy")%>.CONNECTION_ROLE, new <%=importManager.getImportedName(genDiagram.getReferenceConnectionEditPolicyQualifiedClassName())%>());
<%}%>
		installEditPolicy(EditPolicyRoles.SEMANTIC_ROLE, new <%=importManager.getImportedName(genLink.getItemSemanticEditPolicyQualifiedClassName())%>());
	}

	/**
	 * @generated
	 */
	protected PolylineConnection createConnectionShape() {
<%
Viewmap viewmap = genLink.getViewmap();
String figureQualifiedClassName = null;
if (viewmap instanceof FigureViewmap) {
	figureQualifiedClassName = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
}
if (figureQualifiedClassName == null || figureQualifiedClassName.trim().length() == 0) {
	figureQualifiedClassName = "org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx";
}
%>
		return new <%=importManager.getImportedName(figureQualifiedClassName)%>();
	}

	/**
	 * @generated
	 */
	protected void decorateConnectionShape(PolylineConnection shape) {
<%@ include file="shapeattrs.jetinc"%>
<%if (viewmap instanceof DecoratedConnectionViewmap) {%>
		RotatableDecoration sourceDecoration = createSourceDecoration();
		if (sourceDecoration != null) {
			shape.setSourceDecoration(sourceDecoration);
			if (sourceDecoration instanceof <%=importManager.getImportedName("org.eclipse.draw2d.Shape")%>) {
				((<%=importManager.getImportedName("org.eclipse.draw2d.Shape")%>) sourceDecoration).setLineWidth(shape.getLineWidth());
			}
		}
		RotatableDecoration targetDecoration = createTargetDecoration();
		if (targetDecoration != null) {
			shape.setTargetDecoration(targetDecoration);
			if (targetDecoration instanceof <%=importManager.getImportedName("org.eclipse.draw2d.Shape")%>) {
				((<%=importManager.getImportedName("org.eclipse.draw2d.Shape")%>) targetDecoration).setLineWidth(shape.getLineWidth());
			}
		}
<%}%>
	}

	/**
	 * Creates figure for this edit part.
	 * 
	 * Body of this method does not depend on settings in generation model
	 * so you may safely remove <i>generated</i> tag and modify it.
	 * 
	 * @generated
	 */
	protected Connection createConnectionFigure() {
		PolylineConnection shape = createConnectionShape();
		decorateConnectionShape(shape);
		return shape;
	}

<%if (viewmap instanceof DecoratedConnectionViewmap) {%>

	/**
	 * @generated
	 */
	protected RotatableDecoration createSourceDecoration() {
<%	LinkDecoration linkDecoration = ((DecoratedConnectionViewmap) viewmap).getSource();%>
<%@ include file="linkdecoration.jetinc" %>
	}

	/**
	 * @generated
	 */
	protected RotatableDecoration createTargetDecoration() {
<%	linkDecoration = ((DecoratedConnectionViewmap) viewmap).getTarget();%>
<%@ include file="linkdecoration.jetinc" %>
	}
<%}%>
}
<%importManager.emitSortedImports();%>
