<%
	GenFeature genFeature = genDiagram.findGenFeature(genNode.getDomainNameFeature());
	String metaPackageInterfaceName = importManager.getImportedName(genFeature.getGenPackage().getQualifiedPackageInterfaceName());
%>
	/**
	 * @generated
	 */
	protected IFigure createDirectEditFigure() {
		// FIXME reuse getInitialText
		return new Label(String.valueOf(getDiagramNode().getDomainModelElement().eGet(getDefaultNameFeature())), getImage());
	}

	/**
	 * @generated
	 */
	protected Image getImage() {
		EditingDomain ed = AdapterFactoryEditingDomain.getEditingDomainFor(getDiagramNode().getDomainModelElement());
		// XXX it's our way to get adapter factory without initializing it right here. Is there better way?
		if (ed instanceof AdapterFactoryEditingDomain) {
			IItemLabelProvider labelProvider = (IItemLabelProvider) ((AdapterFactoryEditingDomain) ed).getAdapterFactory().adapt(getDiagramNode().getDomainModelElement(), IItemLabelProvider.class);
			if (labelProvider != null) {
				return <%=importManager.getImportedName("org.eclipse.emf.edit.ui.provider.ExtendedImageRegistry")%>.getInstance().getImage(labelProvider.getImage(getDiagramNode().getDomainModelElement()));
			}
			// else fall through
		}
		return null;
	}

	/**
	 * @generated
	 */
	protected IFigure getDirectEditFigure() {
		if (myDirectEditFigure == null) {
			myDirectEditFigure = createDirectEditFigure();
		}
		return myDirectEditFigure;
	}

	/**
	 * @generated
	 */
	protected EditPolicy createDirectEditPolicy() {
		return new DirectEditPolicy() {
			protected Command getDirectEditCommand(DirectEditRequest request) {
				EAttribute domainNameFeature = (EAttribute) request.getDirectEditFeature();
				if (domainNameFeature == null) {
					System.err.println("Someone passes DirectEditRequest without directEditFeature set");
					domainNameFeature = getDefaultNameFeature();
				}
				return new ChangeDiagramElementNameCommand(getDiagramNode(), domainNameFeature,(String) request.getCellEditor().getValue());
			}
			protected void showCurrentEditValue(DirectEditRequest request) {
				IFigure fig = getDirectEditFigure();
				if (fig instanceof Label) {
					((Label)fig).setText((String)request.getCellEditor().getValue());
					fig.getUpdateManager().performUpdate();
				}
			}
		};
	}

	/**
	 * @generated
	 */
	protected void performDirectEdit() {
		if(myManager == null) {
			myManager = new DefaultDirectEditManager(this, new DefaultDirectEditManager.DirectEditInfoProvider() {
				public Object getDirectEditFeature() {
					return <%=metaPackageInterfaceName%>.eINSTANCE.get<%=genFeature.getFeatureAccessorName()%>();
				}
				public String getInitialText() {
					return String.valueOf(getDiagramNode().getDomainModelElement().eGet((EAttribute) getDirectEditFeature()));
				}
				public IFigure getDirectEditFigure() {
					return <%=genNode.getEditPartClassName()%>.this.getDirectEditFigure();
				}
				public Font getTextFont() {
					return getDirectEditFigure().getFont();
				}
			});
		}
		myManager.show();
	}

	/**
	 * @generated
	 */
	public void performRequest(Request request) {
		if (request.getType() == RequestConstants.REQ_DIRECT_EDIT) {
			performDirectEdit();
		} else {
			super.performRequest(request);
		}
	}

	/**
	 * @generated
	 */
	protected EAttribute getDefaultNameFeature() {
		return <%=metaPackageInterfaceName%>.eINSTANCE.get<%=genFeature.getFeatureAccessorName()%>();
	}
