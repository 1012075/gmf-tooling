<%@ jet package="org.eclipse.gmf.codegen.templates.parts" class="ExternalNodeLabelEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenExternalNodeLabel genLabel = (GenExternalNodeLabel) ((Object[]) argument)[0];
GenCommonBase genHost = genLabel.getNode();
GenDiagram genDiagram = genLabel.getDiagram();
%>
<%@ include file="../copyright4java.jetinc"%>
package <%=genDiagram.getEditPartsPackageName()%>;

<%ImportUtil importManager = new ImportUtil(genDiagram.getEditPartsPackageName());%>
import org.eclipse.draw2d.Label;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.EditPolicy;
//import org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart;
//import org.eclipse.gmf.runtime.diagram.ui.editpolicies.LabelDirectEditPolicy;
import <%=genDiagram.getEditPoliciesPackageName()%>.LabelDirectEditPolicy;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genLabel.getEditPartClassName()%> extends <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%> implements ITextAwareEditPart {
<%@ include file="textAwareFields.jetinc"%>

	/**
	 * @generated
	 */
	static {
		registerSnapBackPosition(<%=importManager.getImportedName(genDiagram.getSemanticHintsQualifiedClassName())%>.<%=genLabel.getNode().getUniqueIdentifier()%>Labels.<%=genLabel.getSemanticHintFieldName()%>, new Point(0, 0));
	}

	/**
	 * @generated
	 */
	public <%=genLabel.getEditPartClassName()%>(View view) {
		super(view);
	}

	/**
	 * @generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		installEditPolicy(EditPolicy.DIRECT_EDIT_ROLE, new LabelDirectEditPolicy());
	}

	/**
	 * @generated
	 */
	protected IFigure createFigure() {
		Label label = createLabel();
		defaultText = label.getText();
		return label;
	}

	/**
	 * @generated
	 */
	protected Label createLabel() {
<%
String figureQualifiedClassName = null;
Viewmap viewmap = genLabel.getViewmap();
if (viewmap instanceof FigureViewmap) {
	figureQualifiedClassName = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
	if (figureQualifiedClassName == null || figureQualifiedClassName.trim().length() == 0) {
		figureQualifiedClassName = "org.eclipse.draw2d.Label";
	}
%>
		return new <%=importManager.getImportedName(figureQualifiedClassName)%>();
<%} // instanceof FigureViewmap
 else if (viewmap instanceof SnippetViewmap) {%>
		return <%=((SnippetViewmap) viewmap).getBody()%>;
<%} // instanceof SnippetViewmap; FIXME : obtain figure class name to generate getter
 else if (viewmap instanceof InnerClassViewmap) {
 	figureQualifiedClassName = ((InnerClassViewmap) viewmap).getClassName();
%>
		return new <%=figureQualifiedClassName%>();
<%}%>
	}

<%final boolean needsRefreshBounds = false;%>
<%@ include file="textAwareLabel.jetinc"%>
<%@ include file="textAwareNoIcon.jetinc"%>
<%@ include file="textAware.jetinc"%>

	/**
	 * @generated
	 */
	protected void handleNotificationEvent(<%=importManager.getImportedName("org.eclipse.emf.common.notify.Notification")%> event) {
		Object feature = event.getFeature();
<%@ include file="handleText.jetinc"%>
		super.handleNotificationEvent(event);
	}
<%if (genLabel.getViewmap() instanceof InnerClassViewmap) {%>
<%=((InnerClassViewmap) genLabel.getViewmap()).getClassBody()%>
<%}%>
}
<%importManager.emitSortedImports();%>
