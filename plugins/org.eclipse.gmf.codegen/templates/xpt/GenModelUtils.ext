/*
 * Copyright (c) 2006, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/emf/2002/GenModel";
import "http://www.eclipse.org/emf/2002/Ecore";

/*
 * GenModel functionality unrelated to EMF generated code
 * or metamodel access only.
 */


// GenPackage#getDocumentRoot
genmodel::GenClass getDocumentRoot(genmodel::GenPackage gp) :
JAVA org.eclipse.gmf.internal.codegen.util.GenModelUtils.getDocumentRoot(org.eclipse.emf.codegen.ecore.genmodel.GenPackage)
;

// GenModel#findGenClassifier()
genmodel::GenClassifier findGenClassifier(genmodel::GenModel genModel, ecore::EClassifier eClassifier) :
JAVA org.eclipse.gmf.internal.codegen.util.GenModelUtils.findGenClassifier(org.eclipse.emf.codegen.ecore.genmodel.GenModel, org.eclipse.emf.ecore.EClassifier)
;

//GenFeature#getReverse
genmodel::GenFeature getReverse(genmodel::GenFeature feature) :
	let eReverseFeature = ((ecore::EReference) feature.ecoreFeature).eOpposite :
		eReverseFeature != null ? 
			(let genClass = (genmodel::GenClass) findGenClassifier(feature.genClass.genPackage.genModel, eReverseFeature.eContainingClass) :
				genClass != null ? 
					genClass.genFeatures.select(e|e.ecoreFeature == eReverseFeature).first()
					: null)
			: null
;

// GenFeature#isListType()
boolean isListType(genmodel::GenFeature feature) :
JAVA org.eclipse.gmf.internal.codegen.util.GenModelUtils.isListType(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)
;

// GenFeature#isDerived()
boolean isDerived(genmodel::GenFeature feature) :
JAVA org.eclipse.gmf.internal.codegen.util.GenModelUtils.isDerived(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)
;

// GenFeature#getTypeGenClass()
genmodel::GenClass getTypeGenClassX(genmodel::GenFeature feature) :
JAVA org.eclipse.gmf.internal.codegen.util.GenModelUtils.getTypeGenClass(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)
;

// GenClass#isExternalInterface()
boolean isExternalInterface(genmodel::GenClass genClass) :
	null != genClass.ecoreClass.instanceClassName
;


// GenFeatureImpl#isContains
boolean isContains(genmodel::GenFeature gf) :
	isReferenceType(gf) && ((ecore::EReference) gf.ecoreFeature).containment
;

private boolean isReferenceType(genmodel::GenFeature gf) :
	!{gf.ecoreFeature}.typeSelect(ecore::EReference).isEmpty()
;
