/*
 * Copyright (c) 2006, 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::Utils»

«DEFINE copyright FOR gmfgen::GenEditorGenerator-»
«IF copyrightText != null-»
/*
 * «copyrightText.replaceAll("\n", "\n *")»
 */
«ENDIF-»
«ENDDEFINE»

«DEFINE xcopyright FOR gmfgen::GenEditorGenerator-»
«IF copyrightText != null-»
<!--
«copyrightText»
-->
«ENDIF-»
«ENDDEFINE»

«DEFINE generatedClassComment FOR Object-»
	«EXPAND generatedClassComment("")-»
«ENDDEFINE»
 
«DEFINE generatedClassComment(String comment) FOR Object-»
/**
«IF comment.length() > 0-»
 * «comment.replaceAll("\n", "\n * ")»
«ENDIF-»
 * @generated
 */«ENDDEFINE»

«DEFINE generatedMemberComment FOR Object-»
	«EXPAND generatedMemberComment("")-»
«ENDDEFINE»
 
«DEFINE generatedMemberComment(String comment) FOR Object-»
/**
«IF comment.length() > 0-»
 * «comment.replaceAll("\n", "\n * ")»
«ENDIF-»
 * @generated
 */«ENDDEFINE»

«DEFINE xmlGeneratedTag FOR Object»<?gmfgen generated="true"?>«ENDDEFINE»

«DEFINE getSaveOptions FOR gmfgen::GenDiagram»«getDiagramEditorUtilQualifiedClassName()».getSaveOptions()«ENDDEFINE»

«DEFINE setCharset(String varName) FOR gmfgen::GenDiagram-»
«getDiagramEditorUtilQualifiedClassName()».setCharset(«varName»);
«ENDDEFINE»

«REM»
	containerClass parameter was added because GenFeature.genClass could be a super-class of containerClass.
«ENDREM»
«DEFINE getFeatureValue(String containerVar, genmodel::GenClass containerClass, boolean typedContainer) FOR genmodel::GenFeature-»
	«IF isExternalInterface(containerClass)-»
((«getFeatureTargetType()») «IF typedContainer»((org.eclipse.emf.ecore.EObject) «ENDIF»«containerVar»«IF typedContainer»)«ENDIF».eGet(«EXPAND metaFeatureAccessor»))«-»
	«ELSE-»
«IF !typedContainer»((«getQualifiedInterfaceName(genClass)»)«ENDIF»«containerVar»«IF !typedContainer»)«ENDIF».«getGetAccessor()»()«-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE setFeatureValue(String containerVar, boolean typedContainer, String valueVar, boolean typedValue) FOR genmodel::GenFeature-»
	«IF isExternalInterface(genClass)-»
«IF typedContainer»((org.eclipse.emf.ecore.EObject) «ENDIF»«containerVar»«IF typedContainer»)«ENDIF».eSet(«EXPAND metaFeatureAccessor», «valueVar»)«-»
	«ELSE-»
«IF !typedContainer»((«getQualifiedInterfaceName(genClass)»)«ENDIF»«containerVar»«IF !typedContainer»)«ENDIF».set«getAccessorName(this)»(
		«IF !typedValue»(«getQualifiedInterfaceName(getTypeGenClassX(this))»)«ENDIF»«valueVar»«IF !typedValue»«ENDIF»)«-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE metaClassAccessor FOR genmodel::GenClass»«getQualifiedPackageInterfaceName(genPackage)».eINSTANCE.get«getClassifierAccessorName(this)»()«ENDDEFINE»

«DEFINE metaFeatureAccessor FOR genmodel::GenFeature»«getQualifiedPackageInterfaceName(genClass.genPackage)».eINSTANCE.get«getFeatureAccessorName(this)»()«ENDDEFINE»

// SomeFactory.eINSTANCE.createBlaBla();
//NB: for map entries, the resulting type is EObject, not the qualified interface name. If cast is needed, use (un)parenthesizedCast() extension.
//see GenClassImpl#hasFactoryInterfaceCreateMethod() for details why map entries should be treated differently
«DEFINE newInstance FOR genmodel::GenClass-»
«IF isMapEntry()-»
«genPackage.getQualifiedFactoryInterfaceName()».«genPackage.getFactoryInstanceName()».create(«EXPAND metaClassAccessor»)«ELSE-»
«genPackage.getQualifiedFactoryInterfaceName()».«genPackage.getFactoryInstanceName()».create«ecoreClass.name»()«ENDIF-»
«ENDDEFINE»

«DEFINE newInstance(String varName) FOR genmodel::GenClass-»
«getQualifiedInterfaceName()» «varName» = «IF isMapEntry()»(«getQualifiedInterfaceName()») «ENDIF»«EXPAND newInstance»;
«ENDDEFINE»

«DEFINE newInstanceAsEObject(String varName) FOR genmodel::GenClass-»
org.eclipse.emf.ecore.EObject «varName» = «IF !isMapEntry() && isExternalInterface()»(org.eclipse.emf.ecore.EObject) «ENDIF»«EXPAND newInstance»;
«ENDDEFINE»

«DEFINE nonNLS FOR Object»«EXPAND nonNLS(1)»«ENDDEFINE»

«DEFINE nonNLS(int i) FOR Object»//$NON-NLS-«i»$«ENDDEFINE»
