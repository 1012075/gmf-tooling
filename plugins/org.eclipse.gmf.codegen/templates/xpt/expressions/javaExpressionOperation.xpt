/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«EXTENSION xpt::GenModelUtils»

«DEFINE javaExpressionOperation(gmfgen::ValueExpression valueExpr, genmodel::GenClass context, genmodel::GenClass oppositeEndContext) FOR gmfgen::GenJavaExpressionProvider-»
«EXPAND xpt::Common::generatedMemberComment»
private static «EXPAND javaExpressionReturnTypeFQName(this) FOR valueExpr» «getOperationName(valueExpr)»(«getQualifiedInstanceClassName(context)» self«IF oppositeEndContext != null», «getQualifiedInstanceClassName(oppositeEndContext)» oppositeEnd«ENDIF») {
	// TODO: implement this method
	// Ensure that you remove @generated or mark it @generated NOT
	
	throw new «container.getAbstractExpressionQualifiedClassName()».NoImplException("No user java implementation provided in '«getOperationName(valueExpr)»' operation"); «EXPAND xpt::Common::nonNLS»
}
«ENDDEFINE»

«DEFINE javaExpressionReturnTypeFQName(gmfgen::GenExpressionProviderBase provider) FOR gmfgen::GenConstraint»java.lang.Boolean«ENDDEFINE»

«DEFINE javaExpressionReturnTypeFQName(gmfgen::GenExpressionProviderBase provider) FOR gmfgen::GenFeatureValueSpec»«provider.getQualifiedTypeInstanceClassName(feature)»«ENDDEFINE»

«REM»Used for Metrics only. Corresponding type of ValueExpression should be exposed in gmfgen model«ENDREM»
«DEFINE javaExpressionReturnTypeFQName(gmfgen::GenExpressionProviderBase provider) FOR gmfgen::ValueExpression»java.lang.Double«ENDDEFINE»
