/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::GenModelUtils»

«REM»Can be moved to xpt::policies::ItemSemanticEditPolicy.xpt«ENDREM»
«DEFINE getExpressionWithEnv(gmfgen::ValueExpression valueExpr, genmodel::GenClass context) FOR gmfgen::GenExpressionInterpreter-»
«EXPAND getExpressionFactoryMethod(valueExpr)»(«valueExpr.getBodyString()», «EXPAND xpt::Common::metaClassAccessor FOR context», env)«-»
«ENDDEFINE»

«REM»Can be moved to xpt::policies::ItemSemanticEditPolicy.xpt«ENDREM»
«DEFINE initOppositeEndEnv FOR genmodel::GenClass-»
java.util.Map env = new java.util.HashMap(3);
env.put(OPPOSITE_END_VAR, «EXPAND xpt::Common::metaClassAccessor»);
«ENDDEFINE»

«DEFINE getExpressionFactoryMethod(gmfgen::ValueExpression valueExpr) FOR gmfgen::GenExpressionInterpreter-»
«getQualifiedClassName()».«getExpressionAccessor(valueExpr)-»
«ENDDEFINE»