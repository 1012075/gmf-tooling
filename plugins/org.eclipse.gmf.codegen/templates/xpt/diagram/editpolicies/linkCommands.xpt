/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::editpolicies::Utils»
«EXTENSION xpt::GenModelUtils»

«DEFINE linkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«EXPAND createLinks(diagram)-»
	«EXPAND getReorientLinkCommands(diagram) -»
«ENDDEFINE»

«REM»
 * Start  		start of link creation. 
 *				User click to this editpart and start dragging with link tool.
 * Complete 	end of the command
 *				User points to this editpart as a link target and release mouse button.
 *
 * Outgoing 	the node is link source
 *				This element could be a source for this type of link.
 * Incoming		the node is link destination
 *				This element could be a target for this type of link.
 *
 * Parameters:
 *
 * 	diagram 	GenDiagram used to collect all defined links
 *
 *	this		Instance of TypeModelFacet for the element link could be creates to/from.
 *				This could be TypeModelFacet or TypeLinkModelFacet in case of links to links.
 *
«ENDREM»

«DEFINE createLinks(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«IF !getAllPotentialLinks(diagram).isEmpty()-»
		«EXPAND getCreateRelationshipCommand(diagram)-»
		«EXPAND createLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
	«ENDIF»
«ENDDEFINE»

«DEFINE getReorientLinkCommands(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»
	«IF getReroutableLinks(diagram).size() > 0-»
		«EXPAND getReorientTypeLinkCommand(diagram)-»
	«ENDIF-»
	«IF getReroutableRefLinks(diagram).size() > 0-»
		«EXPAND getReorientRefLinkCommand(diagram)-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE getCreateRelationshipCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«EXPAND callLinkCommands(this) FOREACH getAllPotentialLinks(diagram)-»
	return super.getCreateRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE callLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
	return req.getTarget() == null ?
		«IF createStartLinkCommand(typeModelFacet)»«EXPAND startLinkCommandCreatorName(typeModelFacet)»(req)«ELSE»null«ENDIF»:
		«IF createCompleteLinkCommand(typeModelFacet)»«EXPAND completeLinkCommandCreatorName(typeModelFacet)»(req)«ELSE»null«ENDIF»;
}
«ENDDEFINE»

«DEFINE startLinkCommandCreatorName(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink»getCreateStart«IF createStartOutgoingLinkCommand(typeModelFacet)»Outgoing«ELSEIF createStartIncomingLinkCommand(typeModelFacet)»Incoming«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«DEFINE completeLinkCommandCreatorName(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink»getCreateComplete«IF createCompleteIncomingLinkCommand(typeModelFacet)»Incoming«ELSEIF createCompleteOutgoingLinkCommand(typeModelFacet)»Outgoing«ENDIF»«getUniqueIdentifier()»Command«ENDDEFINE»

«DEFINE createLinkCommands(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»
	«IF createStartLinkCommand(typeModelFacet)-»
		«EXPAND createStartLinkCommand(typeModelFacet)-»
	«ENDIF-»
	«IF createCompleteLinkCommand(typeModelFacet)-»
		«EXPAND createCompleteLinkCommand(typeModelFacet)-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE createStartLinkCommand(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND startLinkCommandCreatorName(typeModelFacet)»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«IF createStartIncomingLinkCommand(typeModelFacet)-»
	req = new org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest(
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(), req.getElementType(), req.getContainmentFeature());
	«ENDIF-»
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
}
«ENDDEFINE»

«DEFINE createCompleteLinkCommand(gmfgen::TypeModelFacet typeModelFacet) FOR gmfgen::GenLink-»

	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.commands.Command «EXPAND completeLinkCommandCreatorName(typeModelFacet)»(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	«IF createCompleteOutgoingLinkCommand(typeModelFacet)-»
	req = new org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest(
			req.getEditingDomain(), req.getContainer(), req.getTarget(), req.getSource(), req.getElementType(), req.getContainmentFeature());
	«ENDIF-»
	return getGEFWrapper(new «getCreateCommandQualifiedClassName()»(req));
}
«ENDDEFINE»

«DEFINE getReorientTypeLinkCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment(
		"Returns command to reorient EClass based link. New link target or source\n" +
		"should be the domain model element associated with this node.\n"
	)»
protected org.eclipse.gef.commands.Command getReorientRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest req) {
	switch (getVisualID(req)) {
	«EXPAND caseReorientCommand FOREACH getReroutableLinks(diagram)-»
	}
	return super.getReorientRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE getReorientRefLinkCommand(gmfgen::GenDiagram diagram) FOR gmfgen::TypeModelFacet-»

	«EXPAND xpt::Common::generatedMemberComment(
		"Returns command to reorient EReference based link. New link target or source\n" +
		"should be the domain model element associated with this node.\n"
	)»
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
	switch (getVisualID(req)) {
	«EXPAND caseReorientCommand FOREACH getReroutableRefLinks(diagram)-»
	}
	return super.getReorientReferenceRelationshipCommand(req);
}
«ENDDEFINE»

«DEFINE caseReorientCommand FOR gmfgen::GenLink-»
case «getEditPartQualifiedClassName()».VISUAL_ID:
	return getGEFWrapper(new «getReorientCommandQualifiedClassName()»(req));
«ENDDEFINE»
