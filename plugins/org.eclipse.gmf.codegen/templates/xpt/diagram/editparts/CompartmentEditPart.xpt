/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«EXTENSION xpt::diagram::editparts::Utils»

«DEFINE CompartmentEditPart FOR gmfgen::GenCompartment-»
«EXPAND xpt::Common::copyright FOR getDiagram().editorGen-»
package «getDiagram().editPartsPackageName»;

/**
 * @generated
 */
public class «editPartClassName» extends 
«IF listLayout-»
	org.eclipse.gmf.runtime.diagram.ui.editparts.ListCompartmentEditPart
«ELSE-»
	org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeCompartmentEditPart
«ENDIF-»
 {

	«EXPAND xpt::diagram::editparts::Common::visualIDConstant FOR this-»

	/**
	 * @generated
	 */
	public «editPartClassName»(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}

	«IF listLayout-»
	/**
	 * @generated
	 */
	protected boolean hasModelChildrenChanged(org.eclipse.emf.common.notify.Notification evt) {
		return false;
	}
	«ENDIF-»

	/**
	 * @generated
	 */
	public String getCompartmentName() {
		return "«title»";
	}

	«IF !needsTitle-»
	«REM»By default titles are shown even if there are no TitleStyle, we need to switch it off«ENDREM»
	/**
	 * @generated
	 */
	public org.eclipse.draw2d.IFigure createFigure() {
		org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure result =
			(org.eclipse.gmf.runtime.diagram.ui.figures.ResizableCompartmentFigure) super.createFigure();
		result.setTitleVisibility(false);
		return result;
	}
	«ENDIF-»

	/**
	 * @generated
	 */
	protected void createDefaultEditPolicies() {
		super.createDefaultEditPolicies();
		«IF canCollapse-»
		installEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE,
			new org.eclipse.gmf.runtime.diagram.ui.editpolicies.ResizableCompartmentEditPolicy());
		«ENDIF-»
		«EXPAND installSemanticEditPolicy-»
		«IF childNodes.size() > 0-»
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CREATION_ROLE,
			new org.eclipse.gmf.runtime.diagram.ui.editpolicies.CreationEditPolicy());
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.DRAG_DROP_ROLE,
			new org.eclipse.gmf.runtime.diagram.ui.editpolicies.DragDropEditPolicy());
			«IF needsCanonicalEditPolicy()-»
		installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CANONICAL_ROLE,
			new «getCanonicalEditPolicyQualifiedClassName()»());
			«ENDIF-»
		«ENDIF-»
		«EXPAND xpt::diagram::editparts::Common::behaviour FOR this-»
	}

	«IF isStoringChildPositions(node)-»
	/**
	 * @generated
	 */
	protected void refreshVisuals() {
		super.refreshVisuals();
		refreshBounds();
	}

	/**
	 * @generated
	 */
	protected void handleNotificationEvent(org.eclipse.emf.common.notify.Notification notification) {
		super.handleNotificationEvent(notification);
		Object feature = notification.getFeature();
		if (org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getSize_Width().equals(feature)
				|| org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getSize_Height().equals(feature)
				|| org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getLocation_X().equals(feature)
				|| org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getLocation_Y().equals(feature)) {
			refreshBounds();
		} 
	}

	/**
	 * @generated
	 */
	protected void refreshBounds() {
		int x = ((Integer) getStructuralFeatureValue(
			org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getLocation_X())).intValue();
		int y = ((Integer) getStructuralFeatureValue(
			org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getLocation_Y())).intValue();
		int width = ((Integer) getStructuralFeatureValue(
			org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getSize_Width())).intValue();
		int height = ((Integer) getStructuralFeatureValue(
			org.eclipse.gmf.runtime.notation.NotationPackage.eINSTANCE.getSize_Height())).intValue();
		((org.eclipse.gef.GraphicalEditPart) getParent()).setLayoutConstraint(
			this, getFigure(), new org.eclipse.draw2d.geometry.Rectangle(x, y, width, height));
	}
	«ENDIF-»

	/**
	 * @generated
	 */
	protected void setRatio(Double ratio) {
		«IF gmfgen::ViewmapLayoutType::UNKNOWN.value == node.getLayoutType().value-»
		if (getFigure().getParent().getLayoutManager() instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout) {
			super.setRatio(ratio);
		}
		«ELSE-»
		// nothing to do -- parent layout does not accept Double constraints as ratio
		// super.setRatio(ratio); 
		«ENDIF-»
	}
}
«ENDDEFINE»

«DEFINE installSemanticEditPolicy FOR gmfgen::GenCompartment-»
	«IF null != node.modelFacet-»
		«EXPAND xpt::diagram::editparts::Common::installSemanticEditPolicy-»
	«ENDIF-»
«ENDDEFINE»