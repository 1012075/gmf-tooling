/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
import "http://www.eclipse.org/emf/2002/GenModel";

genmodel::GenClass getModelElementType(gmfgen::GenContainerBase containerBase) :
// Never should be here!
	null
;

genmodel::GenClass getModelElementType(gmfgen::GenDiagram diagram) :
	diagram.domainDiagramElement
;

genmodel::GenClass getModelElementType(gmfgen::GenCompartment compartment) :
	getModelElementType(compartment.node)
;

genmodel::GenClass getModelElementType(gmfgen::GenNode node) :
	node.modelFacet.metaClass
;

cached Set[genmodel::GenFeature] getSemanticChildrenChildFeatures(gmfgen::GenContainerBase containerBase) :
	getSemanticChildren(containerBase).collect(node | node.modelFacet.childMetaFeature).toSet()
;

cached List[gmfgen::GenNode] getSemanticChildren(gmfgen::GenContainerBase containerBase) :
	containerBase.containedNodes.select(node | null != node.modelFacet && !node.modelFacet.isPhantomElement())
;