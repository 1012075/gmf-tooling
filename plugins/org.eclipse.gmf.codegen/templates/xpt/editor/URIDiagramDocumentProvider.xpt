/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE className FOR gmfgen::GenDiagram»URIDiagramDocumentProvider«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE URIDiagramDocumentProvider FOR gmfgen::GenEditorView-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className FOR editorGen.diagram» extends org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.AbstractDocumentProvider implements org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocumentProvider {

	«EXPAND createElementInfo FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::disposeElementInfo FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::createInputWithEditingDomain FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::getDiagramDocument FOR editorGen.diagram-»
	
	«EXPAND createDocument FOR editorGen.diagram-»
	
	«EXPAND setDocumentContent FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::setupDocument FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::createEmptyDocument FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::createEditingDomain FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::getResourceSetInfo FOR editorGen.diagram-»

	«EXPAND xpt::editor::DocumentProvider::doSaveDocument FOR editorGen.diagram-»

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isDeleted(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			return file != null && !file.exists();
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isReadOnly(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			if (file != null && file.exists()) {
				return !file.canWrite();
			}
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean isModifiable(Object element) {
		if (element instanceof org.eclipse.emf.common.ui.URIEditorInput) {
			java.io.File file = getFile((org.eclipse.emf.common.ui.URIEditorInput) element);
			if (file != null && file.exists()) {
				return file.canWrite();
			}
		}
		return true;
	}

	«EXPAND getFileFromURIEditorInput FOR editorGen.diagram-»
	
	«EXPAND getFileFromURI FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::getOperationRunner FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::computeModificationStamp FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::handleElementChanged FOR editorGen.diagram-»

	«EXPAND handleElementMoved FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::DocumentProvider::isSynchronized FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::ResourceSetInfo::ResourceSetInfo FOR editorGen.diagram-»
	
	«EXPAND xpt::editor::ResourceSetModificationListener::ResourceSetModificationListener FOR editorGen.diagram-»
	
	«EXPAND additions-»
}
«ENDDEFINE»

«DEFINE createElementInfo FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected ElementInfo createElementInfo(Object element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	«EXPAND xpt::editor::DocumentProvider::createElementInfoBody-»
}
«ENDDEFINE»

«DEFINE checkEditorInputInstance FOR gmfgen::GenDiagram-»
if (false == element instanceof «EXPAND editorInputClassFQName») {
	throw new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, «editorGen.plugin.getActivatorQualifiedClassName()».ID, 0, "Incorrect element used: " + element + " instead of org.eclipse.emf.common.ui.URIEditorInput", null)); //$NON-NLS-1$ //$NON-NLS-2$
}
«ENDDEFINE»

«DEFINE editorInputClassFQName FOR gmfgen::GenDiagram»org.eclipse.emf.common.ui.URIEditorInput«ENDDEFINE»

«DEFINE createDocument FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument createDocument(Object element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document = createEmptyDocument();
	setDocumentContent(document, («EXPAND editorInputClassFQName») element);
	setupDocument(element, document);
	return document;
}
«ENDDEFINE»

«DEFINE setDocumentContent FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void setDocumentContent(org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDocument document, org.eclipse.ui.IEditorInput element) throws org.eclipse.core.runtime.CoreException {
	«EXPAND checkEditorInputInstance-»
	org.eclipse.emf.common.util.URI uri = ((«EXPAND editorInputClassFQName») element).getURI();
	org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument diagramDocument = (org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.IDiagramDocument) document;
	org.eclipse.emf.transaction.TransactionalEditingDomain domain = diagramDocument.getEditingDomain();
	org.eclipse.emf.ecore.resource.Resource resource = null;
	try {
		resource = domain.getResourceSet().getResource(uri.trimFragment(), false);
		if (resource == null) {
			resource = domain.getResourceSet().createResource(uri.trimFragment());
		}
		if (!resource.isLoaded()) {
			try {
				java.util.Map options = new java.util.HashMap(org.eclipse.gmf.runtime.emf.core.resources.GMFResourceFactory.getDefaultLoadOptions());
				// @see 171060 
				// options.put(org.eclipse.emf.ecore.xmi.XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE);
				resource.load(options);
			} catch (java.io.IOException e) {
				resource.unload();
				throw e;
			}
		}
		if (resource == null) {
			throw new RuntimeException("Unable to load diagram resource");
		}
		if (uri.fragment() != null) {
			org.eclipse.emf.ecore.EObject rootElement = resource.getEObject(uri.fragment());
			if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
				document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
				return;
			}
		} else {
			for (java.util.Iterator it = resource.getContents().iterator(); it.hasNext();) {
				Object rootElement = it.next();
				if (rootElement instanceof org.eclipse.gmf.runtime.notation.Diagram) {
					document.setContent((org.eclipse.gmf.runtime.notation.Diagram) rootElement);
					return;
				}
			}
		}
		throw new RuntimeException("Diagram is not present in resource");
	} catch (Exception e) {
		org.eclipse.core.runtime.CoreException thrownExcp = null;
		if (e instanceof org.eclipse.core.runtime.CoreException) {
			thrownExcp = (org.eclipse.core.runtime.CoreException) e;
		} else {
			String msg = e.getLocalizedMessage();
			thrownExcp = new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, «editorGen.plugin.getActivatorQualifiedClassName()».ID, 0, msg != null ? msg : "Error loading diagram", e)); //$NON-NLS-1$
		}
		throw thrownExcp;
	}
}
«ENDDEFINE»

«DEFINE handleElementMoved FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
protected void handleElementMoved(org.eclipse.ui.IEditorInput input, org.eclipse.emf.common.util.URI uri) {
	// TODO: append suffix to the URI! (use diagram as a parameter)
	fireElementMoved(input, new org.eclipse.emf.common.ui.URIEditorInput(uri));
}
«ENDDEFINE»

«DEFINE getFileFromURIEditorInput FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
public static java.io.File getFile(org.eclipse.emf.common.ui.URIEditorInput input) {
	return getFile(input.getURI().trimFragment());
}
«ENDDEFINE»

«DEFINE getFileFromURI FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
public static java.io.File getFile(org.eclipse.emf.common.util.URI resourceUri) {
	if (resourceUri != null && resourceUri.isFile()) {
		java.io.File file = new java.io.File(resourceUri.toFileString());
		if (!file.isDirectory()) {
			return file;
		}
	}
	return null;
}
«ENDDEFINE»

«DEFINE additions FOR gmfgen::GenEditorView-»
«ENDDEFINE»