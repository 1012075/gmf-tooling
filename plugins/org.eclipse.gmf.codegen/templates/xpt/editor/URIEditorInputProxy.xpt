/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»

«DEFINE className FOR gmfgen::GenDiagram»URIEditorInputProxy«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«editorGen.editor.packageName».«EXPAND className»«ENDDEFINE»

«DEFINE URIEditorInputProxy FOR gmfgen::GenEditorView-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «packageName»;

/**
 * @generated
 */
public class «EXPAND className FOR editorGen.diagram» extends org.eclipse.emf.common.ui.URIEditorInput implements org.eclipse.gmf.runtime.diagram.ui.resources.editor.document.MEditingDomainElement {

	/**
	 * @generated
	 */
	private final org.eclipse.emf.common.ui.URIEditorInput delegate;

	/**
	 * @generated
	 */
	private final org.eclipse.emf.transaction.TransactionalEditingDomain domain;

	/**
	 * @generated
	 */
	public URIEditorInputProxy(org.eclipse.emf.common.ui.URIEditorInput delegate, org.eclipse.emf.transaction.TransactionalEditingDomain domain) {
		super(delegate.getURI());
		this.delegate = delegate;
		this.domain = domain;
	}

	/**
	 * @generated
	 */
	public org.eclipse.emf.transaction.TransactionalEditingDomain getEditingDomain() {
		return domain;
	}

	/**
	 * @generated
	 */
	public boolean equals(Object obj) {
		if (obj instanceof «EXPAND className FOR editorGen.diagram») {
			«EXPAND className FOR editorGen.diagram» another = («EXPAND className FOR editorGen.diagram») obj;
			return eq(delegate.getURI(), another.getURI()) && eq(domain, another.domain);
		}
		return false;
	}

	/**
	 * @generated
	 */
	private static boolean eq(Object obj1, Object obj2) {
		return obj1 == null ? obj2 == null : obj1.equals(obj2);
	}

	/**
	 * @generated
	 */
	public int hashCode() {
		return org.eclipse.gmf.runtime.common.core.util.HashUtil.hash(org.eclipse.gmf.runtime.common.core.util.HashUtil.hash(delegate), domain);
	}
}
«ENDDEFINE»
