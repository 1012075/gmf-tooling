/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«IMPORT "http://www.eclipse.org/gmf/2005/GenModel/2.0"»
«EXTENSION xpt::GenModelUtils»

«DEFINE childContainerCreateCommand FOR Set[gmfgen::GenNode]-»
/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest req) {
	«EXPAND childNodeCreateCommand FOREACH this-»
	return super.getCreateCommand(req);
}
«ENDDEFINE»

«DEFINE childNodeCreateCommand FOR gmfgen::GenNode-»
	«IF null == modelFacet»«ELSE-»
if («getDiagram().getElementTypesQualifiedClassName()».«getUniqueIdentifier()» == req.getElementType()) {
		«IF !modelFacet.isPhantomElement()-»
	if (req.getContainmentFeature() == null) {
		req.setContainmentFeature(«getQualifiedPackageInterfaceName(modelFacet.containmentMetaFeature.genClass.genPackage)».eINSTANCE.get«getFeatureAccessorName(modelFacet.containmentMetaFeature)»());
	}
		«ENDIF-»
	return getMSLWrapper(new «getCreateCommandQualifiedClassName()»(req));
}
	«ENDIF-»
«ENDDEFINE»