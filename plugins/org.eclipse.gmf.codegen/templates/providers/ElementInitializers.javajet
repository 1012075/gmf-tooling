<%@ jet package="org.eclipse.gmf.codegen.templates.providers" class="ElementInitializersGenerator"
	imports="java.util.* org.eclipse.emf.ecore.* org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.codegen.util.*"%>
<%GenDiagram genDiagram = (GenDiagram) argument;%>
package <%=genDiagram.getElementInitializersPackageName()%>;

<%ImportUtil importManager = new ImportUtil(genDiagram.getProvidersPackageName());%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genDiagram.getElementInitializersClassName()%> {
<%
for(Iterator it = AccessUtil.getGenEntities(genDiagram); it.hasNext();) {
	EObject nextElement = (EObject)it.next();
	GenBaseElement  genElement = nextElement instanceof GenBaseElement ? (GenBaseElement) nextElement : null;
	if(genElement == null || genElement.getModelElementInitializer() == null) continue;	
		
	GenElementInitializer initializer = genElement.getModelElementInitializer();
	if(initializer instanceof GenFeatureSeqInitializer) {
		GenFeatureSeqInitializer ftInitializer = (GenFeatureSeqInitializer)initializer;
	%>
	/**
	* @generated
	*/
	private static final ObjectInitializer <%=initializer.getElement().getUniqueIdentifier()%> = new ObjectInitializer(new FeatureInitializer[] {
		<% for(Iterator featInitIt = ftInitializer.getInitializers().iterator(); featInitIt.hasNext();) { 
				GenFeatureValueSpec featureValSpec = (GenFeatureValueSpec)featInitIt.next();%>
		new FeatureInitializer("<%=featureValSpec.getBody()%>", //$NON-NLS-1$
					<%=importManager.getImportedName(ftInitializer.getElementQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=ftInitializer.getElementClassAccessorName()%>(),
					<%=importManager.getImportedName(featureValSpec.getFeatureQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=featureValSpec.getFeature().getFeatureAccessorName()
					%>())<%=featInitIt.hasNext() ? "," : ""%>
		<%	}
		} %>
	});
<%	} // end of FeatureSeqInitializer
%>

<%	int initializerCount = 0;
	for(Iterator it = AccessUtil.getGenEntities(genDiagram); it.hasNext();) {
		EObject nextElement = (EObject)it.next();
		GenBaseElement  genElement = nextElement instanceof GenBaseElement ? (GenBaseElement) nextElement : null;
		if(genElement == null || genElement.getModelElementInitializer() == null) continue;	
		
		GenElementInitializer initializer = genElement.getModelElementInitializer();
		initializerCount++;	
	%>
	/**
	* @generated
	*/
	public static final void <%=initializer.getInitializerMethodName()%>(<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> element) {
		<%=initializer.getElement().getUniqueIdentifier()%>.init(element);
	}
<%	}%>

	/** 
	 * @generated
	 */	
	private <%=genDiagram.getElementInitializersClassName()%>() {
	}
	
<%if(initializerCount > 0){%>
	/** 
	 * @generated
	 */	
	private static class ObjectInitializer {
		/** 
		 * @generated
		 */		
		private FeatureInitializer[] initExpressions;	
		
		/** 
		 * @generated
		 */		
		ObjectInitializer(FeatureInitializer[] initExpressions) {
			this.initExpressions = initExpressions;
		}
		
		/** 
		 * @generated
		 */		
		void init(<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> instance) {
			for (int i = 0; i < initExpressions.length; i++) {
				FeatureInitializer nextExpr = initExpressions[i];
				nextExpr.init(instance);
			}
		}
	}
	
	/** 
	 * @generated
	 */	
	private static class FeatureInitializer {
		/** 
		 * @generated
		 */		
		private <%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> contextClass;	
		/** 
		 * @generated
		 */		
		private <%=importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%> sFeature;
		/** 
		 * @generated
		 */
		private <%=importManager.getImportedName("java.lang.String")%> expressionBody;		
		/** 
		 * @generated
		 */		
		private <%=importManager.getImportedName("org.eclipse.emf.ocl.query.Query")%> query;

		/**
		 * @generated
		 */		
		FeatureInitializer(<%=importManager.getImportedName("java.lang.String")%> expression, 
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EClass")%> context, 
			<%=importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%> sFeature) {
			this.sFeature = sFeature;
			this.expressionBody = expression;
			this.contextClass	= context;
		}
		/** 
		 * @generated
		 */
		void init(<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> contextInstance) {
			if(this.query == null) {
				this.query = <%=importManager.getImportedName("org.eclipse.emf.ocl.query.QueryFactory")%>.eINSTANCE.createQuery(expressionBody, contextClass);					
			}
			Object value = query.evaluate(contextInstance);
			contextInstance.eSet(sFeature, value);		
		}
	}
<%}%>
}
<%importManager.emitSortedImports();%>
