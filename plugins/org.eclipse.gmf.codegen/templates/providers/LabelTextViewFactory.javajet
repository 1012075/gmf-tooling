<%@ jet package="org.eclipse.gmf.codegen.templates.providers" class="LabelTextViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.* org.eclipse.gmf.codegen.gmfgen.util.*"%>
<%
GenNodeLabel genLabel = (GenNodeLabel) ((Object[]) argument)[0];
GenDiagram genDiagram = genLabel.getDiagram();
ImportUtil importManager = new ImportUtil(genDiagram.getNotationViewFactoriesPackageName());
ViewmapLayoutTypeHelper layoutHelper = ViewmapLayoutTypeHelper.getSharedInstance();
%>
<%@ include file="../copyright4java.jetinc"%>
package <%=genDiagram.getNotationViewFactoriesPackageName()%>;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.notation.View;
<%
importManager.markImportLocation(stringBuffer);
%>

/**
 * @generated
 */
public class <%=genLabel.getNotationViewFactoryClassName()%> extends <%=layoutHelper.isStoringChildPositions(genLabel.getNode()) ?
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractShapeViewFactory") :
	importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.view.factories.BasicNodeViewFactory")%> {

	/**
	 * @generated
	 */
	protected void decorateView(View containerView, View view, IAdaptable semanticAdapter, String semanticHint, int index, boolean persisted) {
		super.decorateView(containerView, view, semanticAdapter, semanticHint, index, persisted);
	}
}
<%importManager.emitSortedImports();%>
