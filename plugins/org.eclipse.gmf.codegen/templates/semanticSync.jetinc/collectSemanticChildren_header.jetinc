<%
Map<GenFeature, List<GenNode>> genFeature2genNodeMap = new LinkedHashMap<GenFeature, List<GenNode>>();
for (int nodeIndex = 0; nodeIndex < genNodes.size(); nodeIndex++) {
	GenNode nextNode = (GenNode) genNodes.get(nodeIndex);
	TypeModelFacet typeModelFacet = nextNode.getModelFacet();
	if (typeModelFacet.isPhantomElement()) {
		// Skipping top-level phantoms
		continue;
	}
	GenFeature childMetaFeature = typeModelFacet.getChildMetaFeature();
	if (!genFeature2genNodeMap.containsKey(childMetaFeature)) {
		genFeature2genNodeMap.put(childMetaFeature, new LinkedList<GenNode>());
	}
	genFeature2genNodeMap.get(childMetaFeature).add(nextNode);
}

if (genFeature2genNodeMap.size() > 0) {
%>	<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> nextValue;
	int nodeVID;<%
}

for (Map.Entry<GenFeature, List<GenNode>> nextEntry : genFeature2genNodeMap.entrySet()) {
	GenFeature childMetaFeature = nextEntry.getKey();
	List<GenNode> genNodesCollection = nextEntry.getValue();
	if (childMetaFeature == null) {
%>		nextValue = /*FIXME no containment/child feature found in the genmodel, toolsmith need to specify correct one here manually*/
<%} else if (childMetaFeature.isListType()) {
%>	for (<%=importManager.getImportedName("java.util.Iterator")%> values = <%=getFeatureValueGetter("modelObject", childMetaFeature, true, importManager)%>.iterator(); values.hasNext();) {
		nextValue = (<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%>) values.next();
<%	} else {%>
	nextValue = <%=getFeatureValueGetter("modelObject", childMetaFeature, true, importManager)%>;
<%	}%>
	nodeVID = <%=importManager.getImportedName(genDiagram.getVisualIDRegistryQualifiedClassName())%>.getNodeVisualID(viewObject, nextValue);
<%	final boolean generateSwitch = genNodesCollection.size() != 1;
	if (generateSwitch) {%>
	switch (nodeVID) {
<%	}
	for (GenNode nextNode : genNodesCollection) {
		if (generateSwitch) {%>
	case <%=importManager.getImportedName(nextNode.getEditPartQualifiedClassName())%>.VISUAL_ID: {
<%		} else {%>
	if (<%=importManager.getImportedName(nextNode.getEditPartQualifiedClassName())%>.VISUAL_ID == nodeVID) {
<%		}%>