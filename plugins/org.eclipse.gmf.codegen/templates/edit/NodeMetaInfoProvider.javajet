<%@ jet package="org.eclipse.gmf.codegen.templates.edit" class="NodeMetaInfoProviderGenerator" imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* java.util.* org.eclipse.gmf.codegen.util.ImportUtil"%>
<%GenNode genNode = (GenNode) argument;%>
<%GenDiagram genDiagram = genNode.getDiagram();%>
package <%=genDiagram.getEditProvidersPackageName()%>;
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditProvidersPackageName());%>

import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.gmf.diagramrt.ChildNode;
import org.eclipse.gmf.diagramrt.DiagramNode;
import org.eclipse.gmf.edit.provider.metainfo.MetaInfoProviderAdapter;
import org.eclipse.gmf.edit.provider.metainfo.NodeMetaInfoProvider;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genNode.getMetaInfoProviderClassName()%> extends MetaInfoProviderAdapter implements NodeMetaInfoProvider {

	/**
	 * @generated
	 */
	public EStructuralFeature getContainmentFeature(DiagramNode node) {
<%
GenFeature genFeature2 = genNode.getContainmentMetaFeature();
String metaPackageInterfaceName2 = importManager.getImportedName(genFeature2.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName2%>.eINSTANCE.get<%=genFeature2.getFeatureAccessorName()%>();
	}

	/**
	 * @generated
	 */
	public EStructuralFeature getContainmentFeature(DiagramNode node, ChildNode childNode) {
<%
for (Iterator it = genNode.getChildNodes().iterator(); it.hasNext();) {
GenChildNode next = (GenChildNode) it.next();
GenFeature genFeature1 = next.getContainmentMetaFeature();
String metaPackageInterfaceName1 = importManager.getImportedName(genFeature1.getGenPackage().getQualifiedPackageInterfaceName());
%>
		if ("<%=next.getGroupID()%>".equals(childNode.getGroupID())) {
			return <%=metaPackageInterfaceName1%>.eINSTANCE.get<%=genFeature1.getFeatureAccessorName()%>();
		}
<%}%>
		return null;
	}

}
<%importManager.emitSortedImports();%>