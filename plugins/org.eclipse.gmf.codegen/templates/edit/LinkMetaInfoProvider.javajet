<%@ jet package="org.eclipse.gmf.codegen.templates.edit" class="LinkMetaInfoProviderGenerator" imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.gmf.codegen.util.ImportUtil"%>
<%GenLink genLink = (GenLink) argument;%>
<%GenDiagram genDiagram = genLink.getDiagram();%>
package <%=genDiagram.getEditProvidersPackageName()%>;
<%ImportUtil importManager = new ImportUtil(genDiagram.getEditProvidersPackageName());%>

import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.gmf.diagramrt.DiagramLink;
import org.eclipse.gmf.edit.provider.metainfo.LinkMetaInfoProvider;
import org.eclipse.gmf.edit.provider.metainfo.MetaInfoProviderAdapter;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genLink.getMetaInfoProviderClassName()%> extends MetaInfoProviderAdapter implements LinkMetaInfoProvider {

	/**
	 * @generated
	 */
	public EStructuralFeature getTargetFeature(DiagramLink diagramLink) {
<%
GenFeature genFeature1 = genDiagram.findGenFeature(genLink.getDomainLinkTargetFeature());
String metaPackageInterfaceName1 = importManager.getImportedName(genFeature1.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName1%>.eINSTANCE.get<%=genFeature1.getFeatureAccessorName()%>();
	}

	/**
	 * @generated
	 */
	public EReference getContainmentFeature(DiagramLink diagramLink) {
<%
if (genLink.getContainmentMetaFeature() == null) {%>
		return null;
<%} else {
GenFeature genFeature2 = genDiagram.findGenFeature(genLink.getContainmentMetaFeature());
String metaPackageInterfaceName2 = importManager.getImportedName(genFeature2.getGenPackage().getQualifiedPackageInterfaceName());
%>
		return <%=metaPackageInterfaceName2%>.eINSTANCE.get<%=genFeature2.getFeatureAccessorName()%>();
<%}%>
	}
}
<%importManager.emitSortedImports();%>

