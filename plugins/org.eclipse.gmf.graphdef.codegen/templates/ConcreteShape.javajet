<%@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="ShapeGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.gmf.gmfgraph.util.* org.eclipse.gmf.common.codegen.* java.util.*"%>
<%
Object[] args = (Object[]) argument;
Shape shapeFig = (Shape) args[0];
final ImportAssistant importManager = (ImportAssistant) args[1];
final GMFGraphSwitch fqnSwitch = new FigureQualifiedNameSwitch();
%>

<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=shapeFig.getName()%> extends <%=importManager.getImportedName((String) fqnSwitch.doSwitch(shapeFig))%> {

	/**
	 * @generated
	 */
	public <%=shapeFig.getName()%>() {
<%
{
Shape figureInstance = shapeFig;
String figureVarName = "this";
%>
<%@ include file="ShapeAttrs.jetinc" %>
<%
}for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext();) {
		Figure next = (Figure) it.next();%>
		setFigure<%=next.getName()%>(createFigure<%=next.getName()%>());
		add(getFigure<%=next.getName()%>());
<%}%>
	}

<%
int fc = 0;
for (Iterator it = shapeFig.getResolvedChildren().iterator(); it.hasNext(); fc++) {
	Figure figure = (Figure) it.next();%>

	private IFigure f<%=figure.getName()%>; 

	/**
	 * @generated
	 */
	public IFigure getFigure<%=figure.getName()%>() {
		return f<%=figure.getName()%>;
	}

	/**
	 * @generated
	 */
	protected void setFigure<%=figure.getName()%>(IFigure figure) {
		f<%=figure.getName()%> = figure;
	}

	/**
	 * @generated
	 */
	private IFigure createFigure<%=figure.getName()%>() {
<%
String parentFigureVarName = "rv" + fc;
{ // scope
FigureMarker figureMarker = figure;
String figureVarName = parentFigureVarName;%>
<%@ include file="instantiate.jetinc" %><%}%>
<%@ include file="FigureChildren.jetinc" %>
		return <%=parentFigureVarName%>;
	}

<%}%>
}<%importManager.emitSortedImports();%>