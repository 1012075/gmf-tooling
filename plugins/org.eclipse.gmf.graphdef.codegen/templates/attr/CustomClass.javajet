<%@ jet package="org.eclipse.gmf.graphdef.codegen.templates" class="CustomClassAttributesGenerator"
	imports="org.eclipse.gmf.gmfgraph.* org.eclipse.emf.codegen.util.CodeGenUtil java.util.* "%>
<%
final CustomClass instance = (CustomClass) ((Object[]) argument)[0];
//final GraphDefDispatcher dispatcher = (GraphDefDispatcher) ((Object[]) argument)[1];
final String varName = (String) ((Object[]) argument)[2];
boolean insertingArbitraryCode = false;
for (Iterator attributes = instance.getAttributes().iterator(); !insertingArbitraryCode && attributes.hasNext();){
	insertingArbitraryCode = ((CustomAttribute)attributes.next()).isMultiStatementValue();
}
%>
<%	if (insertingArbitraryCode) {%>
		{
<%	}%>
<%
int attrIndex = 0;
for (Iterator attrs = instance.getAttributes().iterator(); attrs.hasNext(); attrIndex++){
	CustomAttribute next = (CustomAttribute) attrs.next(); 
	String varValue;
	if (next.isMultiStatementValue()){
		varValue = "attr" + attrIndex;
%>
			<%=java.text.MessageFormat.format(next.getValue(), new Object[] {varValue})%>;
<%	} else {
	 	varValue = next.getValue();
}
	if (next.isDirectAccess()) { 
%>
			<%=varName%>.<%=next.getName()%> = <%=varValue%>;		
<%			
	} else {
%>
			<%=varName%>.set<%=CodeGenUtil.capName(next.getName())%>(<%=varValue%>);
<%	
	}
%>	
<%
} //for 
%>
<%	if (insertingArbitraryCode) {%>
		}
<%	}%>

