/*
 * Copyright (c) 2007, 2009 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

import xpt.StringOperations;

modeltype genModel uses "http://www.eclipse.org/gmf/2009/GenModel";

library ClassNames;

helper getComponentEditPolicyClassName(element : genModel::GenCommonBase) : String {
	return getBaseName(element) + 'ComponentEditPolicy'
}

helper getLayoutEditPolicyClassName(element : genModel::GenContainerBase) : String {
	return getBaseName(element) + 'LayoutEditPolicy'
}

helper getSideAffixedLayoutEditPolicyClassName(element : genModel::GenContainerBase) : String {
	return getBaseName(element) + 'SideAffixedLayoutEditPolicy'
}

helper genModel::GenCommonBase::getGraphicalNodeEditPolicyClassName() : String {
	return getBaseName(self) + 'GraphicalNodeEditPolicy'
}

helper genModel::GenNode::getGraphicalNodeEditPolicyClassName() : String {
	return self.graphicalNodeEditPolicyClassName
}

helper getConnectionEndpointEditPolicyClassName(link : genModel::GenLink) : String {
	return getBaseName(link) + 'EndpointEditPolicy'
}

helper getBaseName(element : genModel::GenCommonBase) : String {
	return let editPartClassName = element.editPartClassName in (if editPartClassName.xpandEndsWith('EditPart') then editPartClassName.substring(1 + 0, editPartClassName.xpandLength() - 'EditPart'.xpandLength()) else editPartClassName endif)
}
