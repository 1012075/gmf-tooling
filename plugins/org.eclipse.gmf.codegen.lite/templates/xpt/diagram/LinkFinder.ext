/*
 * Copyright (c) 2007 Borland Software Corp.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

import "http://www.eclipse.org/emf/2002/Ecore";
import "http://www.eclipse.org/emf/2002/GenModel";
import "http://www.eclipse.org/gmf/2005/GenModel/2.0";
extension xpt::GenModelUtils;


Collection[gmfgen::GenLink] incomingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(e| e.incomingGenClass().ecoreClass.isSuperTypeOf(node.modelFacet.metaClass.ecoreClass))
;

Collection[gmfgen::GenLink] outgoingLinks(gmfgen::GenNode node) :
	node.getDiagram().links.select(e| e.outgoingGenClass().ecoreClass.isSuperTypeOf(node.modelFacet.metaClass.ecoreClass))
;

private genmodel::GenClass incomingGenClass(gmfgen::GenLink link) :
	link.modelFacet.incomingGenClass()
;

private genmodel::GenClass incomingGenClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass incomingGenClass(gmfgen::FeatureLinkModelFacet facet) :
	facet.metaFeature.getTypeGenClass()
;

private genmodel::GenClass incomingGenClass(gmfgen::TypeLinkModelFacet facet) :
	facet.targetMetaFeature.getTypeGenClass()
;

private genmodel::GenClass outgoingGenClass(gmfgen::GenLink link) :
	link.modelFacet.outgoingGenClass()
;

private genmodel::GenClass outgoingGenClass(gmfgen::LinkModelFacet facet) :
	null
;

private genmodel::GenClass outgoingGenClass(gmfgen::FeatureLinkModelFacet facet) :
	facet.metaFeature.genClass
;

private genmodel::GenClass outgoingGenClass(gmfgen::TypeLinkModelFacet facet) :
	facet.sourceMetaFeature == null ? facet.containmentMetaFeature.genClass
		: facet.sourceMetaFeature.getTypeGenClass()
;

private genmodel::GenClass getTypeGenClass(genmodel::GenFeature feature) :
	findGenClassifier(feature.genClass.genPackage.genModel, feature.ecoreFeature.eType)
;
