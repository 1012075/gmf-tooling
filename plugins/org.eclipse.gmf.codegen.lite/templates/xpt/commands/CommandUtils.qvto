/*
 * Copyright (c) 2007, 2009 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */
 
modeltype genModel uses "http://www.eclipse.org/emf/2002/GenModel";
modeltype genModel_1 uses "http://www.eclipse.org/gmf/2009/GenModel";

library CommandUtils;

helper genModel_1::GenContainerBase::getChildNodes() : Collection(genModel_1::GenNode) {
	return null
}

helper genModel_1::GenDiagram::getChildNodes() : Collection(genModel_1::GenNode) {
	return self.topLevelNodes
}

helper genModel_1::GenChildContainer::getChildNodes() : Collection(genModel_1::GenNode) {
	return self.childNodes
}

helper getRelatedGenNodes(node : genModel_1::GenNode) : Collection(genModel_1::GenNode) {
	return getRelatedGenNodes(node.getDiagram(), node.getDomainMetaClass())
}

helper getRelatedGenNodes(diagram : genModel_1::GenDiagram, nodeClass : genModel::GenClass) : Collection(genModel_1::GenNode) {
	return diagram.getAllNodes()->select(e | nodeClass.ecoreClass.isSuperTypeOf(e.getDomainMetaClass().ecoreClass))
}

helper getRelatedChildLabelGenNodes(diagram : genModel_1::GenDiagram, nodeClass : genModel::GenClass) : Collection(genModel_1::GenNode) {
	return (getRelatedGenNodes(diagram, nodeClass)->collect(it | it))[genModel_1::GenChildLabelNode]->asSequence()
}

helper getCreateShortcutNodeCommandClassName(diagram : genModel_1::GenDiagram) : String {
	return 'CreateShortcutNodeCommand'
}

helper getCreateShortcutNodeCommandQualifiedClassName(diagram : genModel_1::GenDiagram) : String {
	return diagram.editCommandsPackageName + '.' + getCreateShortcutNodeCommandClassName(diagram)
}

helper getCreateShortcutEdgeCommandClassName(diagram : genModel_1::GenDiagram) : String {
	return 'CreateShortcutEdgeCommand'
}

helper getCreateShortcutEdgeCommandQualifiedClassName(diagram : genModel_1::GenDiagram) : String {
	return diagram.editCommandsPackageName + '.' + getCreateShortcutEdgeCommandClassName(diagram)
}
