<%@ jet package="org.eclipse.gmf.codegen.templates.lite.commands" class="ReconnectNotationalEdgeTargetCommandGenerator"
	imports="org.eclipse.gmf.common.codegen.*"%>

<%
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>

<%
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
%>

/**
 * @generated
 */
public class ReconnectNotationalEdgeTargetCommand extends <%=importManager.getImportedName("org.eclipse.emf.common.command.AbstractCommand")%> {
	/**
	 * @generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge")%> edge;
	/**
	 * @generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> newTarget;
	/**
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> oldTarget;
	/**
	 * @generated
	 */
	public ReconnectNotationalEdgeTargetCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge")%> edge, <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> newTarget) {
		this.edge = edge;
		this.newTarget = newTarget;
	}
	/**
	 * @generated
	 */
	public boolean canExecute() {
		return newTarget != null;
	}

	/**
	 * @generated
	 */
	public boolean canUndo() {
		return oldTarget != null;
	}

	/**
	 * @generated
	 */
	public void execute() {
		oldTarget = edge.getTarget();
		edge.setTarget(newTarget);
	}

	/**
	 * @generated
	 */
	public void redo() {
		execute();
	}

	/**
	 * @generated
	 */
	public void undo() {
		edge.setTarget(oldTarget);
		oldTarget = null;
	}
}
<%importManager.emitSortedImports();%>
