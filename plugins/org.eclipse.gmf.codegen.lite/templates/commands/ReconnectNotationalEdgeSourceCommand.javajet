<%@ jet package="org.eclipse.gmf.codegen.templates.lite.commands" class="ReconnectNotationalEdgeSourceCommandGenerator"
	imports="org.eclipse.gmf.common.codegen.*"%>

<%
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>

<%
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
%>

/**
 * @generated
 */
public class ReconnectNotationalEdgeSourceCommand extends <%=importManager.getImportedName("org.eclipse.emf.common.command.AbstractCommand")%> {
	/**
	 * @generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge")%> edge;
	/**
	 * @generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> newSource;
	/**
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> oldSource;
	/**
	 * @generated
	 */
	public ReconnectNotationalEdgeSourceCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Edge")%> edge, <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> newSource) {
		this.edge = edge;
		this.newSource = newSource;
	}
	/**
	 * @generated
	 */
	public boolean canExecute() {
		return newSource != null;
	}

	/**
	 * @generated
	 */
	public boolean canUndo() {
		return oldSource != null;
	}

	/**
	 * @generated
	 */
	public void execute() {
		oldSource = edge.getSource();
		edge.setSource(newSource);
	}

	/**
	 * @generated
	 */
	public void redo() {
		execute();
	}

	/**
	 * @generated
	 */
	public void undo() {
		edge.setSource(oldSource);
		oldSource = null;
	}
}
<%importManager.emitSortedImports();%>
