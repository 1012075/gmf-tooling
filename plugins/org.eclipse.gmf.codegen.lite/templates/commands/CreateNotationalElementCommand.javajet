<%@ jet package="org.eclipse.gmf.codegen.templates.lite.commands" class="CreateNotationalElementCommandGenerator"
	imports="org.eclipse.gmf.common.codegen.*"%>

<%
ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>

<%
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
%>

/**
 * @generated
 */
public class CreateNotationalElementCommand extends <%=importManager.getImportedName("org.eclipse.emf.common.command.AbstractCommand")%> {
	/**
	 * @generated
	 */
	private final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> parent;

	/**
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> createdView;

	/**
	 * @generated
	 */
	public CreateNotationalElementCommand(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> parent) {
		this.parent = parent;
	}

	/**
	 * @generated
	 */
	protected final void setCreatedView(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view) {
		this.createdView = view;
	}

	/**
	 * @generated
	 */
	public <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> getCreatedView() {
		return createdView;
	}

	/**
	 * @generated
	 */
	public boolean canExecute() {
		return createdView != null;
	}

	/**
	 * @generated
	 */
	public boolean canUndo() {
		return true;
	}
	/**
	 * @generated
	 */
	public void execute() {
		parent.insertChild(createdView);
	}

	/**
	 * @generated
	 */
	public void undo() {
		parent.removeChild(createdView);
	}

	/**
	 * @generated
	 */
	public void redo() {
		execute();
	}
}
<%importManager.emitSortedImports();%>
