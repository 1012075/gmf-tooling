<%@ jet package="org.eclipse.gmf.codegen.templates.lite.providers"  class="PropertySourceProviderGenerator"
    imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@ include file="../copyright4java.jetinc"%>
<%
importManager.emitPackageStatement(stringBuffer);
importManager.markImportLocation(stringBuffer);
%>

/**
 * @generated
 */
public class <%=genDiagram.getPropertyProviderClassName()%> implements <%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySourceProvider")%> {
	/**
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider")%> adapterFactoryContentProvider;

	/**
	 * @generated
	 */
	public <%=genDiagram.getPropertyProviderClassName()%>(<%=importManager.getImportedName("org.eclipse.emf.common.notify.AdapterFactory")%> domainAdapterFactory) {
		adapterFactoryContentProvider = new <%=importManager.getImportedName("org.eclipse.emf.edit.ui.provider.AdapterFactoryContentProvider")%>(domainAdapterFactory);
	}

	/**
	 * @generated
	 */
	public <%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource")%> getPropertySource(Object object) {
		if (object instanceof <%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource")%>) {
			return (<%=importManager.getImportedName("org.eclipse.ui.views.properties.IPropertySource")%>) object;
		}
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view = getNotationElement(object);
		if (view == null) {
			return adapterFactoryContentProvider.getPropertySource(object);
		}
		//XXX: compose with view properties
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> domainElement = view.getElement();
		return adapterFactoryContentProvider.getPropertySource(domainElement);
	}

	/**
	 * @generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> getNotationElement(Object object) {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%> view = null;
		if (object instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) {
			view = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) object;
		} else if (object instanceof <%=importManager.getImportedName("org.eclipse.gef.EditPart")%>) {
			<%=importManager.getImportedName("org.eclipse.gef.EditPart")%> editPart = (<%=importManager.getImportedName("org.eclipse.gef.EditPart")%>) object;
			if (editPart.getModel() instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) {
				view = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.View")%>) editPart.getModel();
			}
		}
		if (view != null && "<%=genDiagram.getEditorGen().getModelID()%>".equals(getModelID(view))) {
			return view;
		}
		return null;
	}

<%@ include file="../editor/getModelID.jetinc" %>
}
<%importManager.emitSortedImports();%>
