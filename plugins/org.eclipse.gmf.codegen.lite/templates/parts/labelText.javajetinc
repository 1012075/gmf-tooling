	/**
	 * @generated
	 */
	private static <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.labels.ILabelTextDisplayer")%> createLabelTextDisplayer() {
<%
if (labelModelFacet instanceof FeatureLabelModelFacet) {
	FeatureLabelModelFacet featureLabelModelFacet = (FeatureLabelModelFacet) labelModelFacet;
	String viewPattern = featureLabelModelFacet.getViewPattern();
	if (viewPattern == null || viewPattern.length() == 0) {
		StringBuffer patternBuffer = new StringBuffer();
		for(int i = 0; i < featureLabelModelFacet.getMetaFeatures().size(); i++) {
			patternBuffer.append("{").append(i).append("} ");
		}
		viewPattern = patternBuffer.toString().trim();
	}
	String editPattern = null;
	if (!isReadOnly) {
		editPattern = featureLabelModelFacet.getEditPattern();
		if (editPattern == null || editPattern.length() == 0) {
			StringBuffer patternBuffer = new StringBuffer();
			for(int i = 0; i < featureLabelModelFacet.getMetaFeatures().size(); i++) {
				patternBuffer.append("{").append(i).append("} ");
			}
			editPattern = patternBuffer.toString().trim();
		}
	}
%>
		return new <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.labels.SimpleLabelTextDisplayer")%>("<%=viewPattern%>"<%if (!isReadOnly) {%>, "<%=editPattern%>"<%}%>, 
			new <%=importManager.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%>[] {
<%
	for(Iterator it = featureLabelModelFacet.getMetaFeatures().iterator(); it.hasNext(); ) {
		GenFeature next = (GenFeature) it.next();
%>
		<%=importManager.getImportedName(next.getGenPackage().getQualifiedPackageInterfaceName())%>.eINSTANCE.get<%=next.getFeatureAccessorName()%>()<%if (it.hasNext()) {%>,<%}
%>
<%
	}
%>});
<%
} else {
%>
		// TODO: implement this method
		// Ensure that you remove @generated or mark it @generated NOT
		return null;
<%
}
%>
	}

	/**
	 * @generated
	 */
	public <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.labels.ILabelTextDisplayer")%> getLabelTextDisplayer() {
		return LABEL_DISPLAYER;
	}

	/**
	 * @generated
	 */
	public void setLabelText(String text) {
		getLabel().setText(text);
	}

	/**
	 * @generated
	 */
	protected String getLabelText() {
		<%=importManager.getImportedName("org.eclipse.emf.ecore.EObject")%> element = <%=primaryView%>.getElement();
		if (element == null) {
			return defaultText;
		}
		String result = getLabelTextDisplayer().getDisplayText(element);
		if (result == null || result.length() == 0) {
			return defaultText;
		}
		return result;
	}
