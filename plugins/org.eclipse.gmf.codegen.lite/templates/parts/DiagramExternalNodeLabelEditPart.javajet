<%@ jet package="org.eclipse.gmf.codegen.templates.lite.parts" class="DiagramExternalNodeLabelEditPartGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenDiagram genDiagram = (GenDiagram) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
%>
<%@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.geometry.Point;
import org.eclipse.gef.GraphicalEditPart;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public abstract class <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%> extends <%=importManager.getImportedName("org.eclipse.gef.editparts.AbstractGraphicalEditPart")%> {

	/**
	 * @generated
	 */
	public <%=genDiagram.getBaseExternalNodeLabelEditPartClassName()%>(View view) {
		setModel(view);
	}

	/**
	 * @generated
	 */
	public void refreshBounds() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Node")%> node = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Node")%>) getModel();
		if (node.getLayoutConstraint() == null) {
			return;
		}
		assert node.getLayoutConstraint() instanceof <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%>;
		final <%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%> location = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%>) node.getLayoutConstraint();
		getFigure().getParent().setConstraint(getFigure(), new <%=importManager.getImportedName("org.eclipse.draw2d.AbstractLocator")%>() {
			protected Point getReferencePoint() {
				return getLabelLocation(((GraphicalEditPart) getParent()).getFigure()).translate(location.getX(), location.getY());
			}
			public int getRelativePosition() {
				return <%=importManager.getImportedName("org.eclipse.draw2d.PositionConstants")%>.SOUTH;
			}
		});
	}

	/**
	 * @generated
	 */
	protected void refreshVisuals() {
		super.refreshVisuals();
		refreshBounds();
	}

	/**
	 * @generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart")%>.Refresher boundsRefresher = new <%=importManager.getImportedName("org.eclipse.gmf.runtime.lite.edit.parts.update.IUpdatableEditPart")%>.Refresher() {
		public void refresh() {
			refreshBounds();
		}
	};

	/**
	 * @generated
	 */
	public Point getReferencePoint() {
		return getLabelLocation(((GraphicalEditPart) getParent()).getFigure());
	}

	/**
	 * @generated
	 */
	protected Point getLabelLocation(IFigure parent) {
		return parent.getBounds().getBottom();
	}
}
<%importManager.emitSortedImports();%>
