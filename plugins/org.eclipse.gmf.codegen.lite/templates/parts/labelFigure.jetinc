<%
final String figureQualifiedClassName;
if (viewmap instanceof ParentAssignedViewmap) {
	ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
	figureQualifiedClassName = parentAssignedViewmap.getFigureQualifiedClassName() == null ? "org.eclipse.draw2d.IFigure" : parentAssignedViewmap.getFigureQualifiedClassName();
} else if (viewmap instanceof FigureViewmap) {
	String figureQualifiedClassNameCandidate = ((FigureViewmap) viewmap).getFigureQualifiedClassName();
	if (figureQualifiedClassNameCandidate == null || figureQualifiedClassNameCandidate.trim().length() == 0) {
		figureQualifiedClassName = "org.eclipse.draw2d.Label";
	} else {
		figureQualifiedClassName = figureQualifiedClassNameCandidate;
	}
} else if (viewmap instanceof SnippetViewmap) {
	figureQualifiedClassName = "org.eclipse.draw2d.IFigure";
} else if (viewmap instanceof InnerClassViewmap) {
	figureQualifiedClassName = ((InnerClassViewmap) viewmap).getClassName();
} else {
	figureQualifiedClassName = "org.eclipse.draw2d.IFigure";
}
final String figureImportedName;
if (viewmap instanceof InnerClassViewmap) {
	figureImportedName = figureQualifiedClassName;	//do not import inner class
} else {
	figureImportedName = importManager.getImportedName(figureQualifiedClassName);
}
if (viewmap instanceof ParentAssignedViewmap) {
	final ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
%>
	/**
	 * @generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		// Parent should assign one using <%=(parentAssignedViewmap.getSetterName() == null ? "setLabel" : parentAssignedViewmap.getSetterName())%> method
		return null;
	}
<%} else { %>

	/**
	 * @generated
	 */
	protected <%=figureImportedName%> createLabel() {
<%
if (viewmap instanceof FigureViewmap) {
%>
		return new <%=figureImportedName%>();
<%} // instanceof FigureViewmap
 else if (viewmap instanceof SnippetViewmap) {%>
		return <%=((SnippetViewmap) viewmap).getBody()%>;
<%} // instanceof SnippetViewmap; FIXME : obtain figure class name to generate getter
 else if (viewmap instanceof InnerClassViewmap) {
%>
		return new <%=figureImportedName%>();
<%}%>
	}

	/**
	 * @generated
	 */
	protected <%=importManager.getImportedName("org.eclipse.draw2d.IFigure")%> createFigure() {
		<%=figureImportedName%> label = createLabel();
<%
if ("org.eclipse.draw2d.Label".equals(figureQualifiedClassName) || viewmap instanceof InnerClassViewmap) {
%>
		defaultText = label.getText();
<%
} else {
%>
		defaultText = "";	//$NON-NLS-1$
<%
}
%>
		return label;
	}
<%}	/*not parent-assigned*/%>

	/**
<%
if (!"org.eclipse.draw2d.Label".equals(figureQualifiedClassName) && viewmap instanceof InnerClassViewmap==false) {
%>
	 * TODO: reimplement, since the figure used by this editpart is not a Label.
<%
}
%>
	 * @generated
	 */
	public <%=importManager.getImportedName("org.eclipse.draw2d.Label")%> getLabel() {
		return (<%=importManager.getImportedName("org.eclipse.draw2d.Label")%>) getFigure();
	}

<%
String labelSetterName = "setLabel"; // same assumption in NodeEditPart
String labelFigureClassName = "org.eclipse.draw2d.IFigure";
if (viewmap instanceof ParentAssignedViewmap) {
	ParentAssignedViewmap parentAssignedViewmap = (ParentAssignedViewmap) viewmap;
	if (parentAssignedViewmap.getSetterName() != null) {
		labelSetterName = parentAssignedViewmap.getSetterName();
	}
	if (parentAssignedViewmap.getFigureQualifiedClassName() != null) {
		labelFigureClassName = parentAssignedViewmap.getFigureQualifiedClassName();
	}
} // FIXME perhaps, there's no sense to have setLabel for any other viewmap than ParentAssigned?
%>
	/**
	 * @generated
	 */
	public void <%=labelSetterName%>(<%=importManager.getImportedName(labelFigureClassName)%> figure) {
		unregisterVisuals();
		setFigure(figure);
<%
if ("org.eclipse.draw2d.Label".equals(labelFigureClassName)) {
%>
		defaultText = figure.getText();
<%
} else {
%>
		defaultText = "";	//$NON-NLS-1$
<%
}
%>
		registerVisuals();
		refreshVisuals();
	}

<%
if (viewmap instanceof InnerClassViewmap) {
	String classBody = ((InnerClassViewmap) viewmap).getClassBody();
%>
<%=classBody%>
<%@ include file="mapmodeWorkaround.javajetinc"%>
<%
}
%>
