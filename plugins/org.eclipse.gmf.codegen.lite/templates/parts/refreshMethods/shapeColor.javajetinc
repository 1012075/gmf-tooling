	/**
	 * @generated
	 */
	protected void refreshForegroundColor() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.LineStyle")%> style = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.LineStyle")%>)  <%=primaryView%>.getStyle(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage")%>.eINSTANCE.getLineStyle());
		<%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> toDispose = createdForegroundColor;
		if (style != null) {
			int foregroundColor = style.getLineColor();
			int red = foregroundColor & 0x000000FF;
			int green = (foregroundColor & 0x0000FF00) >> 8;
			int blue = (foregroundColor & 0x00FF0000) >> 16;
			<%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> currentColor = getFigure().getForegroundColor();
			if (currentColor != null && currentColor.getRed() == red && currentColor.getGreen() == green && currentColor.getBlue() == blue) {
				return;
			}
			createdForegroundColor = new <%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%>(null, red, green, blue);
			getFigure().setForegroundColor(createdForegroundColor);
		} else {
			getFigure().setForegroundColor(getViewer().getControl().getForeground());
			createdForegroundColor = null;
		}
		if (toDispose != null) {
			toDispose.dispose();
		}
	}

	/**
	 * The color (created by {@link #refreshForegroundColor()}) currently assigned to the figure.
	 * Whenever another color is assigned to it, it is safe to dispose the previous one.
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> createdForegroundColor;

	/**
	 * @generated
	 */
	protected void refreshBackgroundColor() {
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FillStyle")%> style = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.FillStyle")%>)  <%=primaryView%>.getStyle(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationPackage")%>.eINSTANCE.getFillStyle());
		<%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> toDispose = createdBackgroundColor;
		if (style != null) {
			int backgroundColor = style.getFillColor();
			int red = backgroundColor & 0x000000FF;
			int green = (backgroundColor & 0x0000FF00) >> 8;
			int blue = (backgroundColor & 0x00FF0000) >> 16;
			<%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> currentColor = getFigure().getBackgroundColor();
			if (currentColor != null && currentColor.getRed() == red && currentColor.getGreen() == green && currentColor.getBlue() == blue) {
				return;
			}
			createdBackgroundColor = new <%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%>(null, red, green, blue);
			getFigure().setBackgroundColor(createdBackgroundColor);
		} else {
			getFigure().setBackgroundColor(getViewer().getControl().getBackground());
		}
		if (toDispose != null) {
			toDispose.dispose();
		}
	}

	/**
	 * The color (created by {@link #refreshBackgroundColor()}) currently assigned to the figure.
	 * Whenever another color is assigned to it, it is safe to dispose the previous one.
	 * @generated
	 */
	private <%=importManager.getImportedName("org.eclipse.swt.graphics.Color")%> createdBackgroundColor;
