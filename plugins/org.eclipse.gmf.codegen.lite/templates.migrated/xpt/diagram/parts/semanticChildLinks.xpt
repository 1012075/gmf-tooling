/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    bblajer (Borland) - initial API and implementation
 */

«IMPORT 'http://www.eclipse.org/gmf/2008/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»
«IMPORT 'http://www.eclipse.org/emf/2002/GenModel'»
«EXTENSION xpt::GenModelUtils»
«EXTENSION xpt::commands::CommandUtils»
«EXTENSION xpt::diagram::LinkFinder»
«EXTENSION xpt::diagram::parts::LinkNotationModelRefresher»
«EXTENSION xpt::diagram::parts::NativeLinkNotationModelRefresher»
«EXTENSION xpt::NativeGenModelUtils»

«DEFINE semanticChildLinks(parentViewCode : String) FOR gmfgen::GenCommonBase-»
	«LET getLinkChildFeatures(self, containedTypeModelFacetLinks(self)) AS genTypeLinkFeatures-»
	«LET getLinkChildFeatures(self, containedFeatureModelFacetLinks(self)) AS genFeatureLinkFeatures-»
	«IF genTypeLinkFeatures->size() + genFeatureLinkFeatures->size() = 0-»
return java.util.Collections.EMPTY_LIST;
	«ELSE-»
java.util.List result = new java.util.LinkedList();
org.eclipse.emf.ecore.EObject modelObject = «parentViewCode».getElement();
org.eclipse.emf.ecore.EObject nextValue;
		«IF genTypeLinkFeatures->size() > 0-»
int linkVID;
		«ENDIF-»
		«FOREACH genTypeLinkFeatures AS metaFeature-»
			«LET getTypeGenLinksForFeature(self, metaFeature, containedLinks(self)) AS genLinksCollection-»
			«IF isListType(metaFeature)-»
for(java.util.Iterator it = «EXPAND MetaModel::getFeatureValue('modelObject', null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
	nextValue = (org.eclipse.emf.ecore.EObject) it.next();
			«ELSE-»
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue('modelObject', null, false) FOR metaFeature»;
			«ENDIF-»
	linkVID = «getDiagram().getVisualIDRegistryQualifiedClassName()».getLinkWithClassVisualID(nextValue);
			«LET genLinksCollection->size() > 1 AS generateSwitch-»
			«IF generateSwitch-»
	switch (linkVID) {
			«ENDIF-»
			«FOREACH genLinksCollection AS nextLink-»
				«IF generateSwitch-»
	case «nextLink.getEditPartQualifiedClassName()».VISUAL_ID: {
				«ELSE-»
	if («nextLink.getEditPartQualifiedClassName()».VISUAL_ID == linkVID) {
				«ENDIF-»
				«LET nextLink.modelFacet.oclAsType(gmfgen::TypeLinkModelFacet).sourceMetaFeature AS sourceFeature-»
				«IF sourceFeature <> null-»
					«IF isListType(sourceFeature)-»
		java.util.List sources = «EXPAND MetaModel::getFeatureValue('nextValue', null, true) FOR sourceFeature»;
		org.eclipse.emf.ecore.EObject source = sources.size() == 1 ? (org.eclipse.emf.ecore.EObject) sources.get(0) : null;
					«ELSE-»
		org.eclipse.emf.ecore.EObject source = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue('nextValue', null, false) FOR sourceFeature»;
					«ENDIF-»
				«ELSE-»
		org.eclipse.emf.ecore.EObject source = modelObject;
				«ENDIF-»
				«ENDLET-»
				«LET nextLink.modelFacet.oclAsType(gmfgen::TypeLinkModelFacet).targetMetaFeature AS targetFeature-»
				«IF targetFeature <> null-»
					«IF isListType(targetFeature)-»
		java.util.List targets = «EXPAND MetaModel::getFeatureValue('nextValue', null, true) FOR targetFeature»;
		org.eclipse.emf.ecore.EObject target = targets.size() == 1 ? (org.eclipse.emf.ecore.EObject) targets.get(0) : null;
					«ELSE-»
		org.eclipse.emf.ecore.EObject target = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue('nextValue', null, false) FOR targetFeature»;
					«ENDIF-»
				«ELSE-»
		org.eclipse.emf.ecore.EObject target = modelObject;
				«ENDIF-»
				«ENDLET-»
		if (source != null && target != null) {
			result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor(source, target, nextValue, linkVID));
		}
				«IF generateSwitch-»
		break;
	}
				«ELSE-»
	}
				«ENDIF-»
			«ENDFOREACH-»
			«IF generateSwitch-»
	}
			«ENDIF-»
			«IF isListType(metaFeature)-»
}
			«ENDIF-»
			«ENDLET-»
			«ENDLET-»
		«ENDFOREACH-»
		«FOREACH genFeatureLinkFeatures AS metaFeature-»
			«LET getFeatureGenLinksForFeature(self, metaFeature, containedLinks(self)) AS genLinksCollection-»
			«IF isListType(metaFeature)-»
for(java.util.Iterator it = «EXPAND MetaModel::getFeatureValue('modelObject', null, true) FOR metaFeature».iterator(); it.hasNext(); ) {
	nextValue = (org.eclipse.emf.ecore.EObject) it.next();
			«ELSE-»
	nextValue = (org.eclipse.emf.ecore.EObject) «EXPAND MetaModel::getFeatureValue('modelObject', null, false) FOR metaFeature»;
			«ENDIF-»
	if (nextValue != null) {
			«FOREACH genLinksCollection AS nextLink-»
		result.add(new org.eclipse.gmf.runtime.lite.edit.parts.update.canonical.LinkDescriptor(modelObject, nextValue, null, «nextLink.getEditPartQualifiedClassName()».VISUAL_ID));
			«ENDFOREACH-»
	}
			«IF isListType(metaFeature)-»
}
			«ENDIF-»
			«ENDLET-»
		«ENDFOREACH-»
return result;
	«ENDIF-»
	«ENDLET-»
	«ENDLET-»
«ENDDEFINE»
