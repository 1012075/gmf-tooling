import library XpandOclAnyOperations;

library OperationCall_DoubleOperations;

helper Real::doublePlusDouble(parameter : Real) : Real  {
	return self + parameter
}

helper Real::doublePlusInteger(parameter : Integer) : Real  {
	return self + parameter
}

helper Real::doubleMinusDouble(parameter : Real) : Real  {
	return self - parameter
}

helper Real::doubleMinusInteger(parameter : Integer) : Real  {
	return self - parameter
}

helper Real::doubleMultDouble(parameter : Real) : Real  {
	return self * parameter
}

helper Real::doubleMultInteger(parameter : Integer) : Real  {
	return self * parameter
}

helper Real::doubleDivDouble(parameter : Real) : Real  {
	return self / parameter
}

helper Real::doubleDivInteger(parameter : Integer) : Real  {
	return self / parameter
}

helper Real::doubleUnaryMinus() : Real  {
	return -self
}

helper Real::doubleCompareTo(another : OclAny) : Boolean {
	return self.xpandCompareTo(another)
}

helper Real::doubleToString() : String {
	return self.repr()
}

helper Real::doubleEQ(another : OclAny) : Boolean {
	return self = another
}

helper Real::doubleNotEQ(another : OclAny) : Boolean {
	return self <> another
}