modeltype ecore uses "http://www.eclipse.org/emf/2002/Ecore";

library FixedProblems;

helper Collection(ecore::EPackage)::collectAllPackages() : Sequence(ecore::EPackage) {
	return let collector : Sequence(ecore::EPackage) = self->collect(it | it.oclAsType(ecore::EPackage))->asSequence() in collector->union(collector->collect(pkg | pkg.eSubpackages->collectAllPackages())->flatten())
}

helper ecore::EPackage::convertParameterCollection() : Boolean {
	return self.eClassifiers->asSequence()->otherExtension()
}

helper Sequence(ecore::EClassifier)::otherExtension() : Boolean {
	return true
}

helper Sequence(ecore::EClass)::getEssentialVisualChildren(eOperations : Sequence(ecore::EOperation)) : Collection(ecore::ENamedElement) {
	return ((Sequence { })->select(it | it.oclIsKindOf(ecore::EClass))->collect(it | it.oclAsType(ecore::EClass))->union(self))->select(it_1 | it_1.oclIsKindOf(ecore::ENamedElement))->collect(it_1 | it_1.oclAsType(ecore::ENamedElement))->union(eOperations)
}

helper ecore::EPackage::getEClasses() : Collection(ecore::EClass) {
	return (self.eClassifiers)->select(it | it.oclIsKindOf(ecore::EClass))->collect(it | it.oclAsType(ecore::EClass))->asOrderedSet()
}

helper ecore::EReference::isUnlimited() : Boolean {
	return self.upperBound.oclAsType(Integer) > 0
}