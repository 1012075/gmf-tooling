<?xml version="1.0"?>
<cruisecontrol>

	<property file="cc.properties" />

	<plugin name="htmlemail" mailhost="${mailhost}" skipusers="true"
		returnaddress="${buildmaster.email}" returnname="Buildmaster"
	/>

	<project name="checkout" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/checkout/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<cvs
				cvsroot=":pserver:anonymous@dev.eclipse.org:/cvsroot/technology"
				module="org.eclipse.gmf" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="1200">
			<!-- Perform checkout of all plug-ins and features, as builder uses export. -->
			<ant antscript="ant.${ext}" buildfile="checkout.xml"
				target="all" uselogger="true" usedebug="false" usequiet="true">
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/checkout" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[checkout]" buildresultsurl="${reporting.url}/buildresults/checkout"
			logdir="${logs}/checkout">
				<always address="${always.email}" />
			</htmlemail>
		</publishers>
	</project>
	
	<project name="gmf" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/gmf/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/checkout" /> 
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="1200">
			<ant antscript="build.${ext}" buildfile="buildAll.xml"
				target="main" uselogger="true" usedebug="false" usequiet="true">
				<property name="buildType" value="N" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/gmf">
			<merge dir="${artifacts}/cc" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[continuous]" buildresultsurl="${reporting.url}/buildresults/gmf"
			logdir="${logs}/gmf">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/cc"
				dest="${cc.publish}/gmf/" />
		</publishers>
	</project>
	
	<project name="nightly" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/gmf/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/checkout" /> 
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant time="0100" antscript="build.${ext}" buildfile="buildAll.xml"
				target="nightly" uselogger="true" usedebug="false" usequiet="true">
				<property name="buildType" value="N" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/gmf">
			<merge dir="${artifacts}/cc" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[nightly]" buildresultsurl="${reporting.url}/buildresults/gmf"
			logdir="${logs}/gmf">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/cc"
				dest="${cc.publish}/gmf/" />
		</publishers>
	</project>

</cruisecontrol>