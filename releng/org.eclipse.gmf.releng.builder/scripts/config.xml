<cruisecontrol>

	<property file="cc.properties" />

	<plugin name="htmlemail" mailhost="${mailhost}" skipusers="true"
		returnaddress="${buildmaster.email}" returnname="Buildmaster"
	/>

	<project name="checkout" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/checkout/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<cvs
				cvsroot=":pserver:anonymous@dev.eclipse.org:/home/technology"
				module="org.eclipse.gmf" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="1200">
			<!-- Perform checkout of all plug-ins and features, as builder uses export. -->
			<ant antscript="ant.bat" buildfile="checkout.xml"
				target="all" uselogger="false" usedebug="false">
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/checkout" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[checkout]" buildresultsurl="${reporting.url}/buildresults/checkout">
				<always address="${always.email}" />
			</htmlemail>
<!-- 		<rss buildresultsurl="${reporting.url}/buildresults/checkout"
			     file="${logs}/checkout/checkout.rss"/>  -->
		</publishers>
	</project>
	
	<project name="runtime" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/runtime/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/checkout" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant antscript="build.bat" buildfile="build.xml"
				target="main" uselogger="false" usedebug="false">
				<property name="component" value="runtime" />
				<property name="clean" value="true" />
				<property name="cleanBase" value="true" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/runtime" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[runtime]" buildresultsurl="${reporting.url}/buildresults/runtime">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/runtime"
				dest="${artifacts}/published/runtime" />
		</publishers>
	</project>

	<project name="sdk" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/sdk/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/runtime" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant antscript="build.bat" buildfile="build.xml"
				target="main" uselogger="false" usedebug="false">
				<property name="component" value="sdk" />
				<property name="clean" value="true" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/sdk" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[sdk]" buildresultsurl="${reporting.url}/buildresults/sdk">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/sdk"
				dest="${artifacts}/published/sdk" />
		</publishers>
	</project>

	<project name="examples" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/examples/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/sdk" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant antscript="build.bat" buildfile="build.xml"
				target="main" uselogger="false" usedebug="false">
				<property name="component" value="examples" />
				<property name="clean" value="true" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/examples" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[examples]" buildresultsurl="${reporting.url}/buildresults/examples">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/examples"
				dest="${artifacts}/published/examples" />
		</publishers>
	</project>

	<project name="tests" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${logs}/tests/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<buildstatus logdir="${logs}/examples" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant antscript="build.bat" buildfile="build.xml"
				target="main" uselogger="false" usedebug="false">
				<property name="component" value="tests" />
				<property name="clean" value="true" />
				<property name="cleanBase" value="true" />
				<property name="buildRoot" value="${buildRoot}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${logs}/tests">
			<merge dir="${artifacts}/tests/" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail subjectprefix="[tests]" buildresultsurl="${reporting.url}/buildresults/tests">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${artifacts}/tests"
				dest="${artifacts}/published/tests" />
		</publishers>
	</project>

</cruisecontrol>