<?xml version="1.0"?>
<cruisecontrol>

	<property file="cc.properties" />

	<plugin name="htmlemail" mailhost="${mailhost}" mailport="${mailport}" 
		usessl="false"
		username="${buildmaster.username}" password="${buildmaster.password}" skipusers="true"
		returnaddress="${buildmaster.email}" returnname="GMF buildmaster"
		spamwhilebroken="false"
		css="${scripts}/css/cruisecontrol.css"
		xsldir="${scripts}/xsl"
	/>

	<project name="checkout" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/checkout/buildstatus.txt" /> 
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/plugins" />
				<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/features" />
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/tests" />
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/examples" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="1200">
			<!-- Perform checkout of all plug-ins and features, as builder uses export. -->
			<ant antscript="./build.${ext}" buildfile="checkout.xml"
				target="all" uselogger="true" usedebug="false" usequiet="true">
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${cc.logs}/checkout" />
	</project>
	
	<project name="checkout.maintenance" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/checkout.maintenance/buildstatus.txt" /> 
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset quietperiod="10">
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/plugins" />
				<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/features" />
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/tests" />
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/examples" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="1200">
			<!-- Perform checkout of all plug-ins and features, as builder uses export. -->
			<ant antscript="./build.${ext}" buildfile="checkout.xml"
				target="all" uselogger="true" usedebug="false" usequiet="true">
				<property name="tag" value="R2_0_maintenance"/>
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${cc.logs}/checkout.maintenance" />
	</project>


	<project name="continuous" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/continuous/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset>
<!--		    <alwaysbuild/>  -->
		    <buildstatus logdir="${cc.logs}/checkout" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="300">
			<ant antscript="./build.${ext}" buildfile="buildAll.xml"
				target="main" uselogger="true" usedebug="false" usequiet="true">
				<property name="fetchTag" value="HEAD" />
				<property name="buildType" value="C" />
				<property name="forceContextQualifier" value="v${date}-${time}" />
				<property name="skipJavadoc" value="true" />			
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${cc.logs}/continuous">
			<merge dir="${lastresults}" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail buildresultsurl="${reporting.url}/buildresults/continuous"
			logdir="${cc.logs}/continuous">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${lastresults}"
				dest="${cc.artifacts}/continuous/" />
		</publishers>
	</project>
	
	<project name="maintenance" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/maintenance/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset>
<!--		    <alwaysbuild/>  -->
		    <buildstatus logdir="${cc.logs}/checkout.maintenance" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule interval="300">
			<ant antscript="./build.${ext}" buildfile="buildAll.xml"
				target="maintenance" uselogger="true" usedebug="false" usequiet="true">
				<property name="fetchTag" value="M2_0_maintenance" />
				<property name="buildType" value="M" />
				<property name="forceContextQualifier" value="v${date}-${time}" />
				<property name="skipJavadoc" value="true" />			
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${cc.logs}/maintenance">
			<merge dir="${lastresults}" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail buildresultsurl="${reporting.url}/buildresults/maintenance"
			logdir="${cc.logs}/maintenance">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${lastresults}"
				dest="${cc.artifacts}/maintenance/" />
		</publishers>
	</project>
	
	
	<project name="nightly" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/nightly/buildstatus.txt" />
		</listeners>

		<!-- Bootstrappers are run every time the build runs, 
			*before* the modification checks -->
		<bootstrappers></bootstrappers>

		<!-- Defines where cruise looks for changes, to decide
			whether to run the build -->
		<modificationset>
			<alwaysbuild /> 
		</modificationset>

		<!-- Configures the actual build loop, how often and which
			build file/target -->
		<schedule>
			<ant time="0600" antscript="./build.${ext}" buildfile="buildAll.xml"
				target="nightly" uselogger="true" usedebug="false" usequiet="true">				
				<property name="fetchTag" value="HEAD" />
				<property name="buildType" value="N" />
				<property name="forceContextQualifier" value="v${date}-${time}" />
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="${cc.logs}/nightly">
			<merge dir="${lastresults}" />
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail buildresultsurl="${reporting.url}/buildresults/nightly"
			logdir="${cc.logs}/nightly">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${lastresults}"
				dest="${cc.artifacts}/nightly/" />
		</publishers>
	</project>
	<project name="integration" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/integration/buildstatus.txt" />
		</listeners>

		<bootstrappers></bootstrappers>

		<modificationset>
			<alwaysbuild /> 
		</modificationset>

		<schedule>
			<ant time="0300" antscript="./build.${ext}" buildfile="buildAll.xml"
				target="integration" uselogger="true" usedebug="false" usequiet="true">				
				<property name="fetchTag" value="HEAD" />
				<property name="buildType" value="I" />
				<property name="forceContextQualifier" value="v${date}-${time}" />
				<property name="skipUpload" value="true" />
			</ant>
		</schedule>

		<log dir="${cc.logs}/integration">
			<merge dir="${lastresults}" />
		</log>

		<publishers>
			<htmlemail buildresultsurl="${reporting.url}/buildresults/integration"
			logdir="${cc.logs}/integration">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${lastresults}"
				dest="${cc.artifacts}/integration/" />
		</publishers>
	</project>
	
	<project name="gmfbase" buildafterfailed="true">
		<listeners>
			<currentbuildstatuslistener
				file="${cc.logs}/gmfbase/buildstatus.txt" />
		</listeners>

		<bootstrappers></bootstrappers>

		<modificationset quietperiod="10">
			<cvs
				cvsroot="${cvs.root}"
				module="org.eclipse.gmf/releng/org.eclipse.gmf.releng.target" />
		</modificationset>

		<schedule interval="300">
			<ant antscript="./build.${ext}" buildfile="buildBase.xml"
				target="main" uselogger="true" usedebug="false" usequiet="true">				
			</ant>
		</schedule>

		<log dir="${cc.logs}/gmfbase">
			<merge dir="${lastresults}" />
		</log>

		<publishers>
			<htmlemail buildresultsurl="${reporting.url}/buildresults/gmfbase"
			logdir="${cc.logs}/gmfbase">
				<always address="${always.email}" />
			</htmlemail>
			<artifactspublisher dir="${lastresults}"
				dest="${cc.artifacts}/gmfbase/" />
		</publishers>
	</project>
</cruisecontrol>
