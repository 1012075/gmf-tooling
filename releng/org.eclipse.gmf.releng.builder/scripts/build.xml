<?xml version="1.0"?>
<project default="main">
	<property file="build.properties" />
	
	<target name="init">
		<antcall target="clean"/>
		<mkdir dir="${buildDirectory}" />
		<touch file="${user.home}/.cvspass" />
		<available file="label.properties" property="label.properties.present"/>
		<antcall target="create.label.properties"/>
		<property file="label.properties" />
		<condition property="mirrorAvailable">
			<http url="${localUpdateSite}/site.xml"/>
		</condition>
		<condition property="usingMirror">
			<and>
				<isset property="mirrorAvailable"/>
				<isset property="useMirror"/>
			</and>
		</condition>
	</target>
	
	<target name="main" depends="checkArgs,init">
		<ant antfile="build.xml" dir="${pde.build.scripts}">
			<property name="builder" value="${basedir}/../${component}"/>
		</ant>
		<antcall target="publishLocal"/>
	</target>
	
	<target name="publishLocal" if="useMirror">
		<echo message="Creating local update site at ${buildUpdateSitePath}"/>
		<delete>
		    <fileset dir="${buildUpdateSitePath}" excludes="**/*.jar"/>
		</delete>
		<cvs cvsRoot=":pserver:anonymous@dev.eclipse.org:/cvsroot/technology" command="export -r HEAD -d updates" package="org.eclipse.gmf/releng/org.eclipse.gmf.updatesite" dest="${buildRoot}/" />
		<copy todir="${localUpdateSitePath}/features">
		    <fileset dir="${buildUpdateSitePath}/features"/>
		</copy>
		<copy todir="${localUpdateSitePath}/plugins">
			<fileset dir="${buildUpdateSitePath}/plugins"/>
		</copy>
	</target>
	
	<!-- TODO: need to find a way to merge site.xml after initialization, mirror of EMF/GEF, and later 
	           changes in GMF's site.xml -->
	<!-- TODO: copy css, xsl from scripts directory to the local CC web app for consistent look & feel, when modified -->
	<target name="initLocalMirror">		
		<cvs cvsRoot=":pserver:anonymous@dev.eclipse.org:/cvsroot/technology" command="export -r HEAD -d updates" package="org.eclipse.gmf/releng/org.eclipse.gmf.updatesite" dest="${localUpdateSitePath}/../" />
		<mkdir dir="${localUpdateSitePath}/WEB-INF"/>
		<move file="${localUpdateSitePath}/web/web.xml" todir="${localUpdateSitePath}/WEB-INF"/>
	</target>
	
	<target name="checkArgs" unless="component">
		<echo message="-Dcomponent=&lt;path&gt; required." />
		<fail/>
	</target>
	
	<target name="create.label.properties" unless="label.properties.present">
			<tstamp/>
			<property name="date" value="${DSTAMP}" />
			<property name="time" value="${TSTAMP}" />
			<property name="timestamp" value="${date}${time}" />
			<property name="buildType" value="N" />
			<property name="fetchTag" value="HEAD" />
			<property name="buildId" value="${buildType}${date}" />

			<!--this naming convention used by php scripts on download server-->
			<property name="buildLabel" value="${buildType}-${buildId}-${timestamp}" />

			<!--store the build label information in a file-->
			<echo file="label.properties" append="true" >
			buildType=${buildType}
			</echo>
			<echo file="label.properties" append="true" >
			buildId=${buildId}
			</echo>
			<echo file="label.properties" append="true" >
				fetchTag=${fetchTag}
			</echo>
			<echo file="label.properties" append="true" >
			timestamp=${timestamp}
			</echo>
			<echo file="label.properties" append="true" >
			buildLabel=${buildLabel}
			</echo>
		</target>
	
	<target name="clean" if="clean">
		<delete dir="${buildDirectory}"/>
	</target>
	
	<target name="help">
		<echo message="*** GMF build options ***"/>
		<echo message="-Dcomponent=&lt;path&gt; is a required parameter [sdk|runtime|tests]." />
		<echo message="Optional properties:"/>
		<echo message="  -DcleanBase=true will force a re-install of Eclipse"/>
		<echo message="  -DbuildRoot=location of the build (component appended to form buildDirectory)"/>
		<echo message="  -DbaseLocation=the location of the eclipse install to build against"/>
		<echo message="  -Dclean=true will force an update of all sources"/>
		<echo message="  -DbuildType=[N|I|S|R|M] will set the type of build"/>
	</target>

</project>